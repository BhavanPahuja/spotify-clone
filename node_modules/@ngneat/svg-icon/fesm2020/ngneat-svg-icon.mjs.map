{"version":3,"file":"ngneat-svg-icon.mjs","sources":["../../../../projects/ngneat/svg-icon/src/lib/registry.ts","../../../../projects/ngneat/svg-icon/src/lib/providers.ts","../../../../projects/ngneat/svg-icon/src/lib/svg-icon.component.ts","../../../../projects/ngneat/svg-icon/src/lib/data-url.pipe.ts","../../../../projects/ngneat/svg-icon/src/lib/injection.ts","../../../../projects/ngneat/svg-icon/src/ngneat-svg-icon.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { forwardRef, inject, Inject, Injectable } from '@angular/core';\n\nimport { SVG_CONFIG, SVG_ICONS_CONFIG, SvgIconType } from './providers';\n\nclass SvgIcon {\n  init = false;\n\n  constructor(public content: string) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SvgIconRegistry {\n  private svgMap = new Map<string, SvgIcon>();\n  private document = inject(DOCUMENT);\n\n  constructor(@Inject(forwardRef(() => SVG_ICONS_CONFIG)) config: SVG_CONFIG) {\n    if (config?.icons) {\n      this.register(config.icons);\n    }\n\n    if (config?.missingIconFallback) {\n      this.register(config.missingIconFallback);\n    }\n  }\n\n  getAll() {\n    return this.svgMap;\n  }\n\n  get(key: string | undefined, config: { preserveAspectRatio?: string, asDataUrl?: boolean } = {}): string | undefined {\n    const icon = key && this.svgMap.get(key);\n\n    if (!icon) {\n      return undefined;\n    }\n\n    if (!icon.init) {\n      const svg = this.toElement(icon.content);\n      svg.setAttribute('fit', '');\n      svg.setAttribute('height', '100%');\n      svg.setAttribute('width', '100%');\n      svg.setAttribute('preserveAspectRatio', config.preserveAspectRatio ?? 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false');\n\n      icon.content = svg.outerHTML;\n      icon.init = true;\n    }\n\n    if (config.asDataUrl) {\n      const svg = this.toElement(icon.content).outerHTML;\n\n      return `data:image/svg+xml;base64,${btoa(svg)}`\n    }\n\n    return icon.content;\n  }\n\n  register(icons: SvgIconType | SvgIconType[]) {\n    for (const { name, data } of Array.isArray(icons) ? icons : [icons]) {\n      if (!this.svgMap.has(name)) {\n        this.svgMap.set(name, new SvgIcon(data));\n      }\n    }\n  }\n\n  getSvgElement(name: string): SVGSVGElement | undefined {\n    const content = this.get(name);\n\n    if (!content) {\n      return undefined;\n    }\n\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGSVGElement;\n  }\n\n  private toElement(content: string): SVGElement {\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGElement;\n  }\n}\n","import {\n  ENVIRONMENT_INITIALIZER,\n  EnvironmentProviders,\n  inject,\n  InjectionToken,\n  makeEnvironmentProviders,\n} from '@angular/core';\nimport { SvgIconRegistry } from './registry';\n\nexport interface SvgIconType {\n  name: string;\n  data: string;\n}\n\nexport interface SVG_CONFIG {\n  icons?: SvgIconType | SvgIconType[];\n  color?: string;\n  defaultSize?: keyof SVG_CONFIG['sizes'];\n  missingIconFallback?: SvgIconType;\n  sizes: {\n    xs?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    xxl?: string;\n  } & Record<string, string>;\n}\n\nexport const SVG_ICONS_CONFIG = new InjectionToken<SVG_CONFIG>('SVG_ICONS_CONFIG', {\n  providedIn: 'root',\n  factory() {\n    return {} as SVG_CONFIG;\n  },\n});\nexport const SVG_ICONS = new InjectionToken<SVG_CONFIG['icons']>('SVG_ICONS');\nexport const SVG_MISSING_ICON_FALLBACK = new InjectionToken<SVG_CONFIG['missingIconFallback']>(\n  'SVG_MISSING_ICON_FALLBACK',\n  {\n    providedIn: 'root',\n    factory() {\n      return undefined;\n    },\n  }\n);\n\nexport function provideSvgIcons(icons: SvgIconType | SvgIconType[]): EnvironmentProviders {\n  return makeEnvironmentProviders([\n    {\n      provide: ENVIRONMENT_INITIALIZER,\n      multi: true,\n      useValue() {\n        inject(SvgIconRegistry).register(icons);\n      },\n    },\n  ]);\n}\n\nexport function provideSvgIconsConfig(config: Partial<SVG_CONFIG>): EnvironmentProviders {\n  return makeEnvironmentProviders([\n    {\n      provide: SVG_ICONS_CONFIG,\n      useValue: config,\n    },\n  ]);\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Inject, Input, SimpleChanges } from '@angular/core';\nimport { SvgIcons } from './types';\nimport { SvgIconRegistry } from './registry';\nimport { SVG_CONFIG, SVG_ICONS_CONFIG } from './providers';\n\n@Component({\n  selector: 'svg-icon',\n  template: '',\n  standalone: true,\n  host: {\n    role: 'img',\n    'aria-hidden': 'true',\n  },\n  styles: [\n    `\n      :host {\n        display: inline-block;\n        fill: currentColor;\n        width: var(--svg-icon-width, 1em);\n        height: var(--svg-icon-height, 1em);\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SvgIconComponent {\n  @Input() key!: SvgIcons;\n  @Input() fallback!: SvgIcons;\n  @Input() size!: keyof SVG_CONFIG['sizes'];\n  @Input() width!: number | string;\n  @Input() height!: number | string;\n  @Input() fontSize!: number | string;\n  @Input() color!: string;\n  @Input() noShrink = false;\n  @Input() preserveAspectRatio: string | undefined;\n\n  private mergedConfig: SVG_CONFIG;\n  private lastKey!: string;\n  private init = false;\n\n  constructor(\n    private host: ElementRef,\n    private registry: SvgIconRegistry,\n    @Inject(SVG_ICONS_CONFIG) private config: SVG_CONFIG\n  ) {\n    this.mergedConfig = this.createConfig();\n  }\n\n  get element(): HTMLElement {\n    return this.host.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.key) {\n      this.setIcon(this.key);\n    }\n\n    if (changes.size?.currentValue) {\n      this.setIconSize(this.mergedConfig.sizes[this.size]!);\n    }\n\n    if (changes.fontSize?.currentValue) {\n      this.setIconSize(coerceCssPixelValue(this.fontSize));\n    }\n\n    // If on the first change no size was passed, set the default size\n    if (!this.init && !changes.size?.currentValue && !changes.fontSize?.currentValue) {\n      this.setIconSize(this.mergedConfig.sizes[this.mergedConfig.defaultSize || 'md']!);\n    }\n\n    if (changes.width?.currentValue) {\n      this.element.style.width = `var(--svg-icon-width, ${coerceCssPixelValue(this.width)})`;\n    }\n\n    if (changes.height?.currentValue) {\n      this.element.style.height = `var(--svg-icon-height, ${coerceCssPixelValue(this.height)})`;\n    }\n\n    if (changes.color?.currentValue) {\n      this.element.style.color = `var(--svg-icon-color, ${this.color})`;\n    }\n\n    this.init = true;\n  }\n\n  private createConfig() {\n    const defaults: SVG_CONFIG = {\n      sizes: {\n        xs: '0.5rem',\n        sm: '0.75rem',\n        md: `1rem`,\n        lg: '1.5rem',\n        xl: '2rem',\n        xxl: '2.5rem',\n      },\n    };\n\n    const mergedConfig = {\n      ...defaults,\n      ...this.config,\n    };\n\n    mergedConfig.sizes = Object.entries({ ...defaults.sizes, ...mergedConfig.sizes }).reduce((acc, [key, value]) => {\n      acc[key] = `var(--svg-icon-font-size-${key}, ${value})`;\n\n      return acc;\n    }, {} as SVG_CONFIG['sizes']);\n\n    return mergedConfig;\n  }\n\n  private setIconSize(size: string) {\n    this.element.style.fontSize = size;\n    if (this.noShrink) {\n      this.element.style.minWidth = size;\n    }\n  }\n\n  private setIcon(name: string) {\n    const config = { preserveAspectRatio: this.preserveAspectRatio };\n    const icon =\n      this.registry.get(name, config) ??\n      this.registry.get(this.fallback ?? this.config.missingIconFallback?.name, config);\n\n    if (icon) {\n      this.element.setAttribute('aria-label', `${name}-icon`);\n      this.element.classList.remove(getIconClassName(this.lastKey));\n      this.lastKey = name;\n      this.element.classList.add(getIconClassName(name));\n      this.element.innerHTML = icon;\n    }\n  }\n}\n\nfunction coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return typeof value === 'string' ? value : `${value}px`;\n}\n\nfunction getIconClassName(key: string) {\n  return `svg-icon-${key}`;\n}\n","import {inject, Pipe, PipeTransform} from \"@angular/core\";\nimport {SvgIconRegistry} from \"../lib/registry\";\nimport {SvgIcons} from \"../lib/types\";\n\n@Pipe({\n  name: 'svgToDataUrl',\n  standalone: true,\n})\nexport class SvgToDataUrlPipe implements PipeTransform {\n  registry = inject(SvgIconRegistry);\n  transform(key: SvgIcons): string | undefined {\n    return this.registry.get(key, {asDataUrl: true});\n  }\n\n}\n","import {inject} from \"@angular/core\";\nimport {SvgIconRegistry} from \"./registry\";\n\nexport function injectRegisterIcons(\n  ...params: Parameters<(typeof SvgIconRegistry.prototype)['register']>\n) {\n  inject(SvgIconRegistry).register(...params);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}