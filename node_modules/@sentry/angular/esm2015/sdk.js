import { VERSION } from '@angular/core';
import { init as browserInit, SDK_VERSION, setContext } from '@sentry/browser';
import { logger } from '@sentry/utils';
import { IS_DEBUG_BUILD } from './flags';
/**
 * Inits the Angular SDK
 */
export function init(options) {
    options._metadata = options._metadata || {};
    options._metadata.sdk = {
        name: 'sentry.javascript.angular',
        packages: [
            {
                name: 'npm:@sentry/angular',
                version: SDK_VERSION,
            },
        ],
        version: SDK_VERSION,
    };
    checkAndSetAngularVersion();
    browserInit(options);
}
function checkAndSetAngularVersion() {
    const ANGULAR_MINIMUM_VERSION = 10;
    const angularVersion = VERSION && VERSION.major ? parseInt(VERSION.major, 10) : undefined;
    if (angularVersion) {
        if (angularVersion < ANGULAR_MINIMUM_VERSION) {
            IS_DEBUG_BUILD &&
                logger.warn(`The Sentry SDK does not officially support Angular ${angularVersion}.`, `This version of the Sentry SDK supports Angular ${ANGULAR_MINIMUM_VERSION} and above.`, 'Please consider upgrading your Angular version or downgrading the Sentry SDK.');
        }
        setContext('angular', { version: angularVersion });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2RrLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL3NlbnRyeS1qYXZhc2NyaXB0L3NlbnRyeS1qYXZhc2NyaXB0L3BhY2thZ2VzL2FuZ3VsYXIvc3JjLyIsInNvdXJjZXMiOlsic2RrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEMsT0FBTyxFQUFFLElBQUksSUFBSSxXQUFXLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9FLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUV6Qzs7R0FFRztBQUNILE1BQU0sVUFBVSxJQUFJLENBQUMsT0FBdUI7SUFDMUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQztJQUM1QyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsR0FBRztRQUN0QixJQUFJLEVBQUUsMkJBQTJCO1FBQ2pDLFFBQVEsRUFBRTtZQUNSO2dCQUNFLElBQUksRUFBRSxxQkFBcUI7Z0JBQzNCLE9BQU8sRUFBRSxXQUFXO2FBQ3JCO1NBQ0Y7UUFDRCxPQUFPLEVBQUUsV0FBVztLQUNyQixDQUFDO0lBRUYseUJBQXlCLEVBQUUsQ0FBQztJQUM1QixXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDdkIsQ0FBQztBQUVELFNBQVMseUJBQXlCO0lBQ2hDLE1BQU0sdUJBQXVCLEdBQUcsRUFBRSxDQUFDO0lBRW5DLE1BQU0sY0FBYyxHQUFHLE9BQU8sSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0lBRTFGLElBQUksY0FBYyxFQUFFO1FBQ2xCLElBQUksY0FBYyxHQUFHLHVCQUF1QixFQUFFO1lBQzVDLGNBQWM7Z0JBQ1osTUFBTSxDQUFDLElBQUksQ0FDVCxzREFBc0QsY0FBYyxHQUFHLEVBQ3ZFLG1EQUFtRCx1QkFBdUIsYUFBYSxFQUN2RiwrRUFBK0UsQ0FDaEYsQ0FBQztTQUNMO1FBQ0QsVUFBVSxDQUFDLFNBQVMsRUFBRSxFQUFFLE9BQU8sRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDO0tBQ3BEO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZFUlNJT04gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB0eXBlIHsgQnJvd3Nlck9wdGlvbnMgfSBmcm9tICdAc2VudHJ5L2Jyb3dzZXInO1xuaW1wb3J0IHsgaW5pdCBhcyBicm93c2VySW5pdCwgU0RLX1ZFUlNJT04sIHNldENvbnRleHQgfSBmcm9tICdAc2VudHJ5L2Jyb3dzZXInO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmltcG9ydCB7IElTX0RFQlVHX0JVSUxEIH0gZnJvbSAnLi9mbGFncyc7XG5cbi8qKlxuICogSW5pdHMgdGhlIEFuZ3VsYXIgU0RLXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpbml0KG9wdGlvbnM6IEJyb3dzZXJPcHRpb25zKTogdm9pZCB7XG4gIG9wdGlvbnMuX21ldGFkYXRhID0gb3B0aW9ucy5fbWV0YWRhdGEgfHwge307XG4gIG9wdGlvbnMuX21ldGFkYXRhLnNkayA9IHtcbiAgICBuYW1lOiAnc2VudHJ5LmphdmFzY3JpcHQuYW5ndWxhcicsXG4gICAgcGFja2FnZXM6IFtcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ25wbTpAc2VudHJ5L2FuZ3VsYXInLFxuICAgICAgICB2ZXJzaW9uOiBTREtfVkVSU0lPTixcbiAgICAgIH0sXG4gICAgXSxcbiAgICB2ZXJzaW9uOiBTREtfVkVSU0lPTixcbiAgfTtcblxuICBjaGVja0FuZFNldEFuZ3VsYXJWZXJzaW9uKCk7XG4gIGJyb3dzZXJJbml0KG9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiBjaGVja0FuZFNldEFuZ3VsYXJWZXJzaW9uKCk6IHZvaWQge1xuICBjb25zdCBBTkdVTEFSX01JTklNVU1fVkVSU0lPTiA9IDEwO1xuXG4gIGNvbnN0IGFuZ3VsYXJWZXJzaW9uID0gVkVSU0lPTiAmJiBWRVJTSU9OLm1ham9yID8gcGFyc2VJbnQoVkVSU0lPTi5tYWpvciwgMTApIDogdW5kZWZpbmVkO1xuXG4gIGlmIChhbmd1bGFyVmVyc2lvbikge1xuICAgIGlmIChhbmd1bGFyVmVyc2lvbiA8IEFOR1VMQVJfTUlOSU1VTV9WRVJTSU9OKSB7XG4gICAgICBJU19ERUJVR19CVUlMRCAmJlxuICAgICAgICBsb2dnZXIud2FybihcbiAgICAgICAgICBgVGhlIFNlbnRyeSBTREsgZG9lcyBub3Qgb2ZmaWNpYWxseSBzdXBwb3J0IEFuZ3VsYXIgJHthbmd1bGFyVmVyc2lvbn0uYCxcbiAgICAgICAgICBgVGhpcyB2ZXJzaW9uIG9mIHRoZSBTZW50cnkgU0RLIHN1cHBvcnRzIEFuZ3VsYXIgJHtBTkdVTEFSX01JTklNVU1fVkVSU0lPTn0gYW5kIGFib3ZlLmAsXG4gICAgICAgICAgJ1BsZWFzZSBjb25zaWRlciB1cGdyYWRpbmcgeW91ciBBbmd1bGFyIHZlcnNpb24gb3IgZG93bmdyYWRpbmcgdGhlIFNlbnRyeSBTREsuJyxcbiAgICAgICAgKTtcbiAgICB9XG4gICAgc2V0Q29udGV4dCgnYW5ndWxhcicsIHsgdmVyc2lvbjogYW5ndWxhclZlcnNpb24gfSk7XG4gIH1cbn1cbiJdfQ==