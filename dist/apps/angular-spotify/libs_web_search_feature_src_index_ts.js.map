{"version":3,"file":"libs_web_search_feature_src_index_ts.js","mappings":"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","sources":["./libs/web/search/data-access/src/index.ts","./libs/web/search/data-access/src/lib/store/index.ts","./libs/web/search/data-access/src/lib/store/search.store.ts","./libs/web/search/feature/src/index.ts","./libs/web/search/feature/src/lib/search.component.ts","./libs/web/search/feature/src/lib/search.component.html","./libs/web/search/feature/src/lib/search.module.ts","./libs/web/shared/ui/input/src/index.ts","./libs/web/shared/ui/input/src/lib/input.component.ts","./libs/web/shared/ui/input/src/lib/input.component.html","./libs/web/shared/ui/input/src/lib/input.module.ts"],"sourcesContent":["export * from './lib/store';\n","export * from './search.store';\n","import { GenericState } from '@angular-spotify/web/shared/data-access/models';\nimport { SearchApiService, SearchResponse } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { SelectorUtil } from '@angular-spotify/web/shared/utils';\nimport { Injectable } from '@angular/core';\nimport { ComponentStore, tapResponse } from '@ngrx/component-store';\nimport { filter, switchMap, tap } from 'rxjs/operators';\n\ntype SearchState = GenericState<SearchResponse>;\n\n@Injectable()\nexport class SearchStore extends ComponentStore<SearchState> {\n  readonly data$ = this.select((s) => s.data);\n  readonly status$ = this.select((s) => s.status);\n  readonly error$ = this.select((s) => s.error);\n  readonly isLoading$ = this.select(SelectorUtil.isLoading);\n\n  readonly vm$ = this.select(\n    this.data$,\n    this.error$,\n    this.status$,\n    (data, error, status) => ({ data, error, status }),\n    { debounce: true }\n  );\n\n  search = this.effect<string>((params$) =>\n    params$.pipe(\n      filter((term) => !!term),\n      tap(() => this.patchState({ status: 'loading', error: null })),\n      switchMap((term) =>\n        this.searchApiService.search(term, { limit: 8 }).pipe(\n          tapResponse(\n            (data) => {\n              this.patchState({\n                data,\n                status: 'success',\n                error: ''\n              });\n            },\n            (error) => this.patchState({ status: 'error', error: error as unknown as string })\n          )\n        )\n      )\n    )\n  );\n\n  constructor(private searchApiService: SearchApiService) {\n    super(<SearchState>{ data: {} });\n  }\n}\n","export * from './lib/search.module';\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { debounceTime, distinctUntilChanged, filter, tap } from 'rxjs/operators';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\n\nimport { RouterUtil } from '@angular-spotify/web/shared/utils';\nimport { SearchStore } from '@angular-spotify/web/search/data-access';\nimport { PlayerApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\n\n@UntilDestroy()\n@Component({\n  selector: 'as-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  providers: [SearchStore],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchComponent implements OnInit {\n  searchControl: FormControl = new FormControl('');\n  data$ = this.store.data$;\n  isLoading$ = this.store.isLoading$;\n\n  constructor(\n    private router: Router,\n    private store: SearchStore,\n    private playerApi: PlayerApiService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.searchControl.valueChanges\n      .pipe(\n        untilDestroyed(this),\n        debounceTime(300),\n        distinctUntilChanged(),\n        filter((term) => term.length >= 1),\n        tap((term) => {\n          this.syncQueryParams(term);\n          this.store.search(term);\n        })\n      )\n      .subscribe();\n\n    // assign query param if available\n    const queryParam =\n      this.activatedRoute.snapshot.queryParams[RouterUtil.Configuration.SearchQueryParam];\n    if (queryParam) {\n      this.searchControl.patchValue(queryParam);\n    }\n  }\n\n  togglePlay(isPlaying: boolean, contextUri: string) {\n    this.playerApi.togglePlay(isPlaying, { context_uri: contextUri }).subscribe();\n  }\n\n  private syncQueryParams(term: string) {\n    this.router.navigate(['.'], {\n      relativeTo: this.activatedRoute,\n      queryParams: { [RouterUtil.Configuration.SearchQueryParam]: term },\n      replaceUrl: true\n    });\n  }\n}\n","<div class=\"mb-6 content-spacing\">\n  <!-- Search Input -->\n  <div class=\"search-input-container\">\n    <as-input\n      class=\"search-control\"\n      [control]=\"searchControl\"\n      icon=\"search\"\n      [iconSize]=\"'lg'\"\n      placeholder=\"Artists, songs, albums, or playlists\"\n      [autoFocus]=\"true\"\n      [rounded]=\"true\"\n      [enableClearButton]=\"true\"\n      >\n    </as-input>\n    @if (isLoading$ | async) {\n      <as-spinner class=\"ml-4\"></as-spinner>\n    }\n  </div>\n\n  <!-- Results lists -->\n  @if (data$ | async; as data) {\n    <!-- Tracks -->\n    @if (data?.tracks?.items?.length) {\n      <div>\n        <h2 class=\"mt-8 mb-4 text-heading\">Songs</h2>\n        <as-media-table-header>\n          <div class=\"album-tracks-grid\">\n            <div>#</div>\n            <div class=\"text-xs uppercase ellipsis-one-line\">Title</div>\n            <svg-icon [key]=\"'clock'\" title=\"Duration\"></svg-icon>\n          </div>\n        </as-media-table-header>\n        <div class=\"mb-8\">\n          @for (item of data?.tracks?.items; track item; let idx = $index) {\n            <as-album-track\n              [track]=\"item\"\n              [contextUri]=\"item.album.uri\"\n              [index]=\"idx + 1\"\n              >\n            </as-album-track>\n          }\n        </div>\n      </div>\n    }\n    <!-- Artists -->\n    @if (data?.artists?.items?.length) {\n      <div>\n        <h2 class=\"mt-8 mb-4 text-heading\">Artists</h2>\n        <div class=\"common-grid\">\n          @for (item of data?.artists?.items; track item) {\n            <as-card\n              [title]=\"item.name\"\n              [uri]=\"item.uri\"\n              [imageUrl]=\"item.images[0]?.url\"\n              [routerUrl]=\"'/artist/' + item.id\"\n              [description]=\"item.type | titlecase\"\n              [roundedImage]=\"true\"\n              (togglePlay)=\"togglePlay($event, item.uri)\"\n              >\n            </as-card>\n          }\n        </div>\n      </div>\n    }\n    <!-- Albums -->\n    @if (data?.albums?.items?.length) {\n      <div>\n        <h2 class=\"mt-8 mb-4 text-heading\">Albums</h2>\n        <div class=\"common-grid\">\n          @for (item of data?.albums?.items; track item) {\n            <as-card\n              [title]=\"item.name\"\n              [uri]=\"item.uri\"\n              [description]=\"item.artists[0].name\"\n              [imageUrl]=\"item.images[0]?.url\"\n              [routerUrl]=\"'/albums/' + item.id\"\n              (togglePlay)=\"togglePlay($event, item.uri)\"\n              >\n            </as-card>\n          }\n        </div>\n      </div>\n    }\n    <!-- Playlists -->\n    @if (data?.playlists?.items?.length) {\n      <div>\n        <h2 class=\"mt-8 mb-4 text-heading\">Playlists</h2>\n        <div class=\"common-grid\">\n          @for (item of data?.playlists?.items; track item) {\n            <as-card\n              [title]=\"item.name\"\n              [uri]=\"item.uri\"\n              [description]=\"item.description\"\n              [imageUrl]=\"item.images[0]?.url\"\n              [routerUrl]=\"'/playlist/' + item.id\"\n              (togglePlay)=\"togglePlay($event, item.uri)\"\n              >\n            </as-card>\n          }\n        </div>\n      </div>\n    }\n  }\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { InputModule } from '@angular-spotify/web/shared/ui/input';\nimport { SpinnerModule } from '@angular-spotify/web/shared/ui/spinner';\nimport { CardComponent } from '@angular-spotify/web/shared/ui/media';\nimport { MediaTableModule } from '@angular-spotify/web/shared/ui/media-table';\nimport { AlbumTrackModule } from '@angular-spotify/web/album/ui/album-track';\nimport { SearchComponent } from './search.component';\nimport { SvgIconComponent } from '@ngneat/svg-icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    InputModule,\n    SpinnerModule,\n    CardComponent,\n    MediaTableModule,\n    SvgIconComponent,\n    AlbumTrackModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: SearchComponent\n      }\n    ])\n  ],\n  declarations: [SearchComponent],\n  exports: [SearchComponent]\n})\nexport class SearchModule {}\n","export * from './lib/input.module';\n","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport type IconSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\nexport const IconSizesInPx: { [key in IconSize]: number } = {\n  xs: 8, // 0.5rem\n  sm: 12, // 0.75rem\n  md: 16, // 1rem\n  lg: 24, // 1.5rem\n  xl: 32, // 2rem\n  xxl: 40 // 2.5rem\n};\n\n@Component({\n  selector: 'as-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputComponent implements AfterViewInit {\n  @Input() control = new FormControl('');\n  @Input() containerClassName = '';\n  @Input() icon = '';\n  @Input() iconSize: IconSize = 'md';\n  @Input() placeholder = '';\n  @Input() rounded = false;\n  @Input() enableClearButton = false;\n  @Input() autoFocus = false;\n  @ViewChild('input') inputRef!: ElementRef;\n\n  get iconContainerWidth(): number {\n    return IconSizesInPx[this.iconSize] * 2;\n  }\n\n  get inputContainerHeight(): number {\n    return IconSizesInPx[this.iconSize] * 1.8;\n  }\n\n  get showClearButton(): boolean {\n    return this.enableClearButton && !!this.control?.value;\n  }\n\n  clear() {\n    this.control.patchValue('');\n    this.inputRef.nativeElement.focus();\n  }\n\n  ngAfterViewInit() {\n    if(this.autoFocus && this.inputRef) {\n      this.inputRef.nativeElement.focus();\n    }\n  }\n}\n","<div\n  [ngClass]=\"['input-container', containerClassName]\"\n  [style.height.px]=\"inputContainerHeight\"\n  [style.border-radius]=\"rounded ? '500px' : '8px'\"\n  >\n  @if (icon) {\n    <div class=\"input-icon-container\" [style.width.px]=\"iconContainerWidth\">\n      <svg-icon [key]=\"icon\" [size]=\"iconSize\" color=\"black\"> </svg-icon>\n    </div>\n  }\n\n  <input\n    #input\n    [formControl]=\"control\"\n    [placeholder]=\"placeholder\"\n    [style.padding-left.px]=\"icon ? iconContainerWidth : 4\"\n    [style.padding-right.px]=\"showClearButton ? iconContainerWidth : 4\"\n    />\n\n  @if (showClearButton) {\n    <div\n      class=\"input-icon-container right\"\n      [style.width.px]=\"iconContainerWidth\"\n      >\n      <svg-icon [key]=\"'times'\" [size]=\"iconSize\" color=\"black\" (click)=\"clear()\"> </svg-icon>\n    </div>\n  }\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IconModule } from '@angular-spotify/web/shared/ui/icon';\nimport { InputComponent } from './input.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, IconModule],\n  declarations: [InputComponent],\n  exports: [InputComponent]\n})\nexport class InputModule {}\n"],"names":["SearchApiService","SelectorUtil","ComponentStore","tapResponse","filter","switchMap","tap","SearchStore","constructor","searchApiService","data","data$","select","s","status$","status","error$","error","isLoading$","isLoading","vm$","debounce","search","effect","params$","pipe","term","patchState","limit","_","i0","ɵɵinject","i1","_2","factory","ɵfac","FormControl","ActivatedRoute","Router","debounceTime","distinctUntilChanged","UntilDestroy","untilDestroyed","RouterUtil","PlayerApiService","ɵɵelement","ɵɵproperty","item_r1","album","uri","idx_r2","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵrepeaterCreate","SearchComponent_Conditional_5_Conditional_0_For_12_Template","ɵɵrepeaterTrackByIdentity","ɵɵadvance","ɵɵrepeater","data_r3","tracks","items","ɵɵlistener","SearchComponent_Conditional_5_Conditional_1_For_5_Template_as_card_togglePlay_0_listener","$event","item_r5","ɵɵrestoreView","_r4","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","togglePlay","name","images","url","id","ɵɵpipeBind1","type","SearchComponent_Conditional_5_Conditional_1_For_5_Template","artists","SearchComponent_Conditional_5_Conditional_2_For_5_Template_as_card_togglePlay_0_listener","item_r8","_r7","SearchComponent_Conditional_5_Conditional_2_For_5_Template","albums","SearchComponent_Conditional_5_Conditional_3_For_5_Template_as_card_togglePlay_0_listener","item_r10","_r9","description","SearchComponent_Conditional_5_Conditional_3_For_5_Template","playlists","ɵɵtemplate","SearchComponent_Conditional_5_Conditional_0_Template","SearchComponent_Conditional_5_Conditional_1_Template","SearchComponent_Conditional_5_Conditional_2_Template","SearchComponent_Conditional_5_Conditional_3_Template","ɵɵconditional","length","SearchComponent","router","store","playerApi","activatedRoute","searchControl","ngOnInit","valueChanges","syncQueryParams","subscribe","queryParam","snapshot","queryParams","Configuration","SearchQueryParam","patchValue","isPlaying","contextUri","context_uri","navigate","relativeTo","replaceUrl","ɵɵdirectiveInject","i2","i3","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","SearchComponent_Template","rf","ctx","SearchComponent_Conditional_3_Template","SearchComponent_Conditional_5_Template","tmp_6_0","__decorate","CommonModule","RouterModule","InputModule","SpinnerModule","CardComponent","MediaTableModule","AlbumTrackModule","SvgIconComponent","SearchModule","_3","forChild","path","component","declarations","imports","exports","ElementRef","ɵɵstyleProp","ctx_r0","iconContainerWidth","icon","iconSize","InputComponent_Conditional_4_Template_svg_icon_click_1_listener","_r2","clear","IconSizesInPx","xs","sm","md","lg","xl","xxl","InputComponent","control","containerClassName","placeholder","rounded","enableClearButton","autoFocus","inputContainerHeight","showClearButton","value","inputRef","nativeElement","focus","ngAfterViewInit","viewQuery","InputComponent_Query","InputComponent_Conditional_1_Template","InputComponent_Conditional_4_Template","ɵɵpureFunction1","_c1","ReactiveFormsModule","IconModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}