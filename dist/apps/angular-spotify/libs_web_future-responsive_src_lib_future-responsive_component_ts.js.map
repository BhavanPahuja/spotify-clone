{"version":3,"file":"libs_web_future-responsive_src_lib_future-responsive_component_ts.js","mappings":"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","sources":["./libs/web/future-responsive/src/lib/content/flex-form.component.ts","./libs/web/future-responsive/src/lib/content/responsive-content.component.ts","./libs/web/future-responsive/src/lib/future-responsive.component.ts","./libs/web/future-responsive/src/lib/responsive-container.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'as-flex-form',\n  styles: [\n    `\n      .flex-form {\n        display: flex;\n        align-items: flex-end;\n        flex-wrap: wrap;\n        gap: 16px;\n      }\n\n      .name-field {\n        flex: 1 1 160px;\n      }\n\n      .email-field {\n        flex: 3 1 220px;\n      }\n\n      .button {\n        flex: 1 1 80px;\n      }\n\n      label {\n        font-weight: 600;\n        color: #fff\n      }\n      input {\n        --color-gray-700: hsl(210deg, 14%, 66%);\n        display: block;\n        width: 100%;\n        background: transparent;\n        border-top: none;\n        border-right: none;\n        border-left: none;\n        border-image: initial;\n        border-bottom: 2px solid var(--color-gray-700);\n        color: #fff;\n        height: 2.5rem;\n        border-radius: 2px;\n        outline-color: rgb(255, 221, 51);\n        outline-offset: 4px;\n        font-weight: 400\n      }\n\n      button {\n        --color-background: hsl(210deg, 30%, 12%);\n        flex: 1 1 80px;\n        height: 2.5rem;\n        background: rgb(230, 230, 230);\n        border: none;\n        color: var(--color-background);\n        border-radius: 4px;\n        font-weight: 700;\n        outline-color: rgb(255, 221, 51);\n        outline-offset: 4px;\n        padding: 1px 6px;\n      }\n    `\n  ],\n  template: `\n    <form class=\"flex-form\">\n      <label for=\"name\" class=\"name-field\">\n        Name:\n        <input id=\"name\" type=\"name\" class=\"name-field\" placeholder=\"Your name\" />\n      </label>\n      <label for=\"email\" class=\"email-field\">\n        Email:\n        <input id=\"email\" type=\"email\" class=\"email-field\" placeholder=\"example@domain.com\" />\n      </label>\n      <button class=\"submit\">Submit</button>\n    </form>\n  `\n})\nexport class FlexFormComponent {}\n","import { CardComponent } from '@angular-spotify/web/shared/ui/media';\nimport { Component, inject } from '@angular/core';\nimport * as mockAlbums from '../albums.mock.json';\nimport { PlayerApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { CommonModule } from '@angular/common';\nimport { FlexFormComponent } from './flex-form.component';\nimport {\n  DataSizeObserverDirective,\n  ResizableDirective\n} from '@angular-spotify/web/shared/directives/data-size-observer';\n\n@Component({\n  standalone: true,\n  imports: [\n    CardComponent,\n    CommonModule,\n    FlexFormComponent,\n    DataSizeObserverDirective,\n    ResizableDirective\n  ],\n  selector: 'as-responsive-to-content',\n  styles: [\n    `\n      .section-header {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n      }\n\n      .section-title {\n        @apply text-white text-xl;\n      }\n\n      .section-more {\n        @apply text-gray-300 text-lg;\n      }\n    `\n  ],\n  template: `\n    <!-- <h2 class=\"text-2xl text-white\">1. Responsive to the content</h2> -->\n    <div class=\"grid grid-cols-[2fr_1fr] gap-6\">\n      <div class=\"top-albums\">\n        <div class=\"section-header\">\n          <h3 class=\"section-title\">Top Albums</h3>\n          <a class=\"section-more\" href=\"#\">See All</a>\n        </div>\n        <hr class=\"py-2\" />\n        <section class=\"common-grid gap-6\">\n          <ng-container *ngTemplateOutlet=\"cards; context: { albums: topAlbums }\"></ng-container>\n        </section>\n      </div>\n      <div class=\"feature-albums\">\n        <div class=\"section-header\">\n          <h3 class=\"section-title\">Based on your listening history</h3>\n          <a class=\"section-more\" href=\"#\">See All</a>\n        </div>\n        <hr class=\"py-2\" />\n        <section class=\"common-grid gap-6\">\n          <ng-container\n            *ngTemplateOutlet=\"cards; context: { albums: featureAlbums }\"\n          ></ng-container>\n        </section>\n      </div>\n    </div>\n    \n    <div class=\"w-[632px] mx-auto py-10 px-4 mt-20\" dataSizeObserver [top]=\"true\" resizable>\n      <as-flex-form  />\n    </div>\n    \n    <ng-template #cards let-albums=\"albums\">\n      @for (item of albums; track item) {\n        <as-card\n          [title]=\"item.album.name\"\n          [uri]=\"item.album.uri\"\n          [description]=\"item.album.artists[0].name\"\n          [imageUrl]=\"item.album.images[0]?.url\"\n          [routerUrl]=\"item.album.id\"\n          (togglePlay)=\"togglePlay($event, item.album.uri)\"\n          >\n        </as-card>\n      }\n    </ng-template>\n    `\n})\nexport class ResponsiveToContentComponent {\n  response = mockAlbums as SpotifyApi.UsersSavedAlbumsResponse;\n  topAlbums = this.response.items.slice(0, 8);\n  featureAlbums = this.response.items.slice(8, 12);\n\n  playerApi = inject(PlayerApiService);\n\n  togglePlay(isPlaying: boolean, contextUri: string) {\n    this.playerApi\n      .togglePlay(isPlaying, {\n        context_uri: contextUri\n      })\n      .subscribe();\n  }\n}\n","import { Component } from '@angular/core';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { ResponsiveToContentComponent } from './content/responsive-content.component';\nimport { ResponsiveToContainerComponent } from './responsive-container.component';\n\n@Component({\n  selector: 'as-future-responsive',\n  standalone: true,\n  imports: [\n    NzButtonModule,\n    ResponsiveToContentComponent,\n    ResponsiveToContainerComponent\n  ],\n  template: `\n    <div class=\"content-spacing pb-[250px]\">\n      <h1 class=\"text-3xl text-white\">Future Responsive Design</h1>\n      <as-responsive-to-content class=\"block mb-20\"></as-responsive-to-content>\n      <as-responsive-to-container></as-responsive-to-container>\n    </div>\n  `\n})\nexport class FutureResponsiveComponent {}\n","import { PlayerApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { CardComponent } from '@angular-spotify/web/shared/ui/media';\nimport { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport * as mockAlbums from './albums.mock.json';\n\n@Component({\n  standalone: true,\n  imports: [CardComponent, CommonModule],\n  selector: 'as-responsive-to-container',\n  styles: [\n    `\n      .card-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      }\n    `\n  ],\n  template: `\n    <div class=\"grid gap-6\">\n      <section class=\"card-grid gap-6\">\n        <ng-container\n          *ngTemplateOutlet=\"cards; context: { albums: featureAlbumsTwo }\"\n        ></ng-container>\n      </section>\n      <section class=\"card-grid gap-6\">\n        <ng-container\n          *ngTemplateOutlet=\"cards; context: { albums: featureAlbumsThree }\"\n        ></ng-container>\n      </section>\n      <section class=\"common-grid gap-6\">\n        <ng-container *ngTemplateOutlet=\"cards; context: { albums: albums }\"></ng-container>\n      </section>\n    </div>\n    <h2 class=\"text-3xl text-white my-8\">Card Playground</h2>\n    <div class=\"grid place-items-center min-h-[600px]\">\n      <div class=\"min-w-[180px] resize-x overflow-auto\">\n        <ng-container *ngTemplateOutlet=\"cards; context: { albums: singleAlbum }\"></ng-container>\n      </div>\n    </div>\n    \n    <ng-template #cards let-albums=\"albums\">\n      @for (item of albums; track item) {\n        <as-card\n          [title]=\"item.album.name\"\n          [uri]=\"item.album.uri\"\n          [description]=\"item.album.artists[0].name\"\n          [imageUrl]=\"item.album.images[0]?.url\"\n          [routerUrl]=\"item.album.id\"\n          (togglePlay)=\"togglePlay($event, item.album.uri)\"\n          >\n        </as-card>\n      }\n    </ng-template>\n    `\n})\nexport class ResponsiveToContainerComponent {\n  response = mockAlbums as SpotifyApi.UsersSavedAlbumsResponse;\n  singleAlbum = [this.response.items[1]];\n  featureAlbumsTwo = this.response.items.slice(0, 2);\n  featureAlbumsThree = this.response.items.slice(2, 5);\n  albums = this.response.items;\n\n  playerApi = inject(PlayerApiService);\n\n  togglePlay(isPlaying: boolean, contextUri: string) {\n    this.playerApi\n      .togglePlay(isPlaying, {\n        context_uri: contextUri\n      })\n      .subscribe();\n  }\n}\n"],"names":["FlexFormComponent","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","FlexFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","CardComponent","inject","mockAlbums","PlayerApiService","CommonModule","DataSizeObserverDirective","ResizableDirective","ɵɵelementContainer","ɵɵlistener","ResponsiveToContentComponent_ng_template_21_For_1_Template_as_card_togglePlay_0_listener","$event","item_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","togglePlay","album","uri","ɵɵproperty","name","artists","images","url","id","ɵɵrepeaterCreate","ResponsiveToContentComponent_ng_template_21_For_1_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","albums_r4","ResponsiveToContentComponent","constructor","response","topAlbums","items","slice","featureAlbums","playerApi","isPlaying","contextUri","context_uri","subscribe","ResponsiveToContentComponent_Template","ɵɵtemplate","ResponsiveToContentComponent_ng_container_9_Template","ResponsiveToContentComponent_ng_container_18_Template","ResponsiveToContentComponent_ng_template_21_Template","ɵɵtemplateRefExtractor","ɵɵadvance","cards_r5","ɵɵpureFunction1","_c0","i1","NgTemplateOutlet","styles","NzButtonModule","ResponsiveToContainerComponent","FutureResponsiveComponent","FutureResponsiveComponent_Template","encapsulation","ResponsiveToContainerComponent_ng_template_12_For_1_Template_as_card_togglePlay_0_listener","ResponsiveToContainerComponent_ng_template_12_For_1_Template","singleAlbum","featureAlbumsTwo","featureAlbumsThree","albums","ResponsiveToContainerComponent_Template","ResponsiveToContainerComponent_ng_container_2_Template","ResponsiveToContainerComponent_ng_container_4_Template","ResponsiveToContainerComponent_ng_container_6_Template","ResponsiveToContainerComponent_ng_container_11_Template","ResponsiveToContainerComponent_ng_template_12_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}