{"version":3,"file":"libs_web_album_feature_list_src_index_ts.js","mappings":"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","sources":["./libs/web/album/feature/list/src/index.ts","./libs/web/album/feature/list/src/lib/albums.component.ts","./libs/web/album/feature/list/src/lib/albums.component.html","./libs/web/album/feature/list/src/lib/albums.module.ts"],"sourcesContent":["export * from './lib/albums.module';\n","import { Component, OnInit, ChangeDetectionStrategy, inject } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { getAlbums, getAlbumsLoading, loadAlbums } from '@angular-spotify/web/album/data-access';\nimport { PlayerApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { RouterUtil } from '@angular-spotify/web/shared/utils';\nimport {\n  CurrentViewTransitionService,\n  getViewTransitionParamValue\n} from '@angular-spotify/shared/view-transition';\n\n@Component({\n  selector: 'as-albums',\n  templateUrl: './albums.component.html',\n  styleUrls: ['./albums.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlbumsComponent implements OnInit {\n  albums$ = this.store.pipe(select(getAlbums));\n  isLoading$ = this.store.pipe(select(getAlbumsLoading));\n  transitionService = inject(CurrentViewTransitionService);\n\n  constructor(private store: Store, private playerApi: PlayerApiService) {}\n\n  ngOnInit(): void {\n    this.store.dispatch(loadAlbums());\n  }\n\n  togglePlay(isPlaying: boolean, contextUri: string) {\n    this.playerApi\n      .togglePlay(isPlaying, {\n        context_uri: contextUri\n      })\n      .subscribe();\n  }\n\n  /*\n    When transitioning to or from the detail page, include the `with-view-transition` transition name.\n    This enables the browser to animate between the cover photo image in the list and its image on the detail page.\n  */\n  viewTransitionName(item: SpotifyApi.SavedAlbumObject) {\n    const transition = this.transitionService.currentTransition();\n    const transitionAlbumId = getViewTransitionParamValue(\n      transition,\n      RouterUtil.Configuration.AlbumId\n    );\n    const withViewTransition = transitionAlbumId === item.album.id;\n    return withViewTransition ? 'with-view-transition' : '';\n  }\n}\n","<div class=\"content-spacing\">\n  @if (albums$ | async; as albums) {\n    <div class=\"common-grid\">\n      @for (item of albums.items; track item) {\n        <as-card\n          [ngClass]=\"viewTransitionName(item)\"\n          [title]=\"item.album.name\"\n          [uri]=\"item.album.uri\"\n          [description]=\"item.album.artists[0].name\"\n          [imageUrl]=\"item.album.images[0]?.url\"\n          [routerUrl]=\"item.album.id\"\n          (togglePlay)=\"togglePlay($event, item.album.uri)\"\n          >\n        </as-card>\n      }\n    </div>\n  }\n  @if (isLoading$ | async) {\n    <as-spinner> </as-spinner>\n  }\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlbumsComponent } from './albums.component';\nimport { RouterModule } from '@angular/router';\nimport { CardComponent } from '@angular-spotify/web/shared/ui/media';\nimport { SpinnerModule } from '@angular-spotify/web/shared/ui/spinner';\n@NgModule({\n  imports: [\n    CommonModule,\n    CardComponent,\n    SpinnerModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: AlbumsComponent\n      }\n    ])\n  ],\n  declarations: [AlbumsComponent]\n})\nexport class AlbumsModule {}\n"],"names":["inject","select","Store","getAlbums","getAlbumsLoading","loadAlbums","PlayerApiService","RouterUtil","CurrentViewTransitionService","getViewTransitionParamValue","i0","ɵɵelementStart","ɵɵlistener","AlbumsComponent_Conditional_1_For_2_Template_as_card_togglePlay_0_listener","$event","item_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","togglePlay","album","uri","ɵɵelementEnd","ɵɵproperty","viewTransitionName","name","artists","images","url","id","ɵɵrepeaterCreate","AlbumsComponent_Conditional_1_For_2_Template","ɵɵrepeaterTrackByIdentity","ɵɵadvance","ɵɵrepeater","ctx","items","ɵɵelement","AlbumsComponent","constructor","store","playerApi","albums$","pipe","isLoading$","transitionService","ngOnInit","dispatch","isPlaying","contextUri","context_uri","subscribe","item","transition","currentTransition","transitionAlbumId","Configuration","AlbumId","withViewTransition","_","ɵɵdirectiveInject","i1","i2","_2","selectors","decls","vars","consts","template","AlbumsComponent_Template","rf","ɵɵtemplate","AlbumsComponent_Conditional_1_Template","AlbumsComponent_Conditional_3_Template","ɵɵconditional","tmp_0_0","ɵɵpipeBind1","CommonModule","RouterModule","CardComponent","SpinnerModule","AlbumsModule","_3","forChild","path","component","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}