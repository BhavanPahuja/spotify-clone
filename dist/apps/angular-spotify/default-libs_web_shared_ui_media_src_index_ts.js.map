{"version":3,"file":"default-libs_web_shared_ui_media_src_index_ts.js","mappings":"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","sources":["./libs/web/shared/directives/click-stop-propagation/src/index.ts","./libs/web/shared/directives/click-stop-propagation/src/lib/click-stop-propagation.directive.ts","./libs/web/shared/directives/click-stop-propagation/src/lib/click-stop-propagation.module.ts","./libs/web/shared/ui/media/src/index.ts","./libs/web/shared/ui/media/src/lib/card.component.ts","./libs/web/shared/ui/media/src/lib/card.component.html"],"sourcesContent":["export * from './lib/click-stop-propagation.module';\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[asClickStopPropagation]'\n})\nexport class ClickStopPropagationDirective {\n  @HostListener('click', ['$event']) onClick(e: MouseEvent) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClickStopPropagationDirective } from './click-stop-propagation.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ClickStopPropagationDirective],\n  exports: [ClickStopPropagationDirective]\n})\nexport class ClickStopPropagationModule {}\n","export * from './lib/card.component';\n","import { PlaybackStore } from '@angular-spotify/web/shared/data-access/store';\nimport { ClickStopPropagationModule } from '@angular-spotify/web/shared/directives/click-stop-propagation';\nimport { MediaCoverModule } from '@angular-spotify/web/shared/ui/media-cover';\nimport { PlayButtonModule } from '@angular-spotify/web/shared/ui/play-button';\nimport { SelectorUtil } from '@angular-spotify/web/shared/utils';\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LetDirective, PushPipe } from '@ngrx/component';\nimport { Observable, combineLatest, of } from 'rxjs';\n@Component({\n  selector: 'as-card',\n  standalone: true,\n  imports: [\n    RouterModule,\n    LetDirective,\n    PushPipe,\n    MediaCoverModule,\n    PlayButtonModule,\n    ClickStopPropagationModule\n],\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardComponent implements OnInit {\n  @Input() imageUrl: string | undefined;\n  @Input() title!: string;\n  @Input() description!: string | null;\n  @Input() routerUrl!: string;\n  @Input() uri!: string;\n  @Input() roundedImage? = false;\n  @Output() togglePlay = new EventEmitter<boolean>();\n\n  isMediaPlaying$!: Observable<boolean>;\n\n  constructor(private playbackStore: PlaybackStore) {}\n\n  ngOnInit() {\n    this.isMediaPlaying$ = SelectorUtil.getMediaPlayingState(\n      combineLatest([of(this.uri), this.playbackStore.playback$])\n    );\n  }\n}\n","<a class=\"card\"\n   [routerLink]=\"routerUrl\">\n  <div class=\"card-cover\"\n       [class.is-playing]=\"isPlaying\"\n       *ngrxLet=\"isMediaPlaying$ as isPlaying\">\n    <as-media-cover [imageUrl]=\"imageUrl\"\n                    [roundedImage]=\"roundedImage\">\n    </as-media-cover>\n    <as-play-button class=\"play-button-overlay\"\n                    [primary]=\"true\"\n                    [large]=\"true\"\n                    [isPlaying]=\"isPlaying\"\n                    (togglePlay)=\"togglePlay.emit($event)\"\n                    asClickStopPropagation>\n    </as-play-button>\n  </div>\n  <div class=\"card-body\">\n    <h2 class=\"card-title font-bold text-white ellipsis-one-line\">\n      {{ title }}\n    </h2>\n    <div class=\"card-description text-description\">\n      {{ description }}\n    </div>\n  </div>\n</a>\n"],"names":["ClickStopPropagationDirective","onClick","e","preventDefault","stopPropagation","_","_2","selectors","hostBindings","ClickStopPropagationDirective_HostBindings","rf","ctx","i0","ɵɵlistener","ClickStopPropagationDirective_click_HostBindingHandler","$event","CommonModule","ClickStopPropagationModule","_3","declarations","imports","exports","PlaybackStore","MediaCoverModule","PlayButtonModule","SelectorUtil","EventEmitter","RouterModule","LetDirective","combineLatest","of","ɵɵelementStart","ɵɵelement","CardComponent_div_1_Template_as_play_button_togglePlay_2_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","togglePlay","emit","ɵɵelementEnd","ɵɵclassProp","isPlaying_r3","ɵɵadvance","ɵɵproperty","imageUrl","roundedImage","CardComponent","constructor","playbackStore","ngOnInit","isMediaPlaying$","getMediaPlayingState","uri","playback$","ɵɵdirectiveInject","i1","inputs","title","description","routerUrl","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CardComponent_Template","ɵɵtemplate","CardComponent_div_1_Template","ɵɵtext","ɵɵtextInterpolate1","i2","RouterLink","i3","MediaCoverComponent","i4","PlayButtonComponent","i5","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}