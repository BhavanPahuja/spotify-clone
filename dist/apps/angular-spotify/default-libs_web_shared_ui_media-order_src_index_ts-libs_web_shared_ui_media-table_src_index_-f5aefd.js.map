{"version":3,"file":"default-libs_web_shared_ui_media-order_src_index_ts-libs_web_shared_ui_media-table_src_index_-f5aefd.js","mappings":"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","sources":["./libs/web/shared/ui/media-order/src/index.ts","./libs/web/shared/ui/media-order/src/lib/media-order.component.ts","./libs/web/shared/ui/media-order/src/lib/media-order.component.html","./libs/web/shared/ui/media-order/src/lib/media-order.module.ts","./libs/web/shared/ui/media-table/src/index.ts","./libs/web/shared/ui/media-table/src/lib/media-table-header/media-table-header.component.ts","./libs/web/shared/ui/media-table/src/lib/media-table-header/media-table-header.component.html","./libs/web/shared/ui/media-table/src/lib/media-table-row/media-table-row.component.ts","./libs/web/shared/ui/media-table/src/lib/media-table-row/media-table-row.component.html","./libs/web/shared/ui/media-table/src/lib/media-table.module.ts","./libs/web/shared/ui/track-main-info/src/index.ts","./libs/web/shared/ui/track-main-info/src/lib/track-main-info.component.ts","./libs/web/shared/ui/track-main-info/src/lib/track-main-info.component.html","./libs/web/shared/ui/track-main-info/src/lib/track-main-info.module.ts"],"sourcesContent":["export * from './lib/media-order.module';\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'as-media-order',\n  templateUrl: './media-order.component.html',\n  styleUrls: ['./media-order.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MediaOrderComponent {\n  @Input() index!: number;\n  @Input() isPlaying!: boolean | null;\n  @Output() togglePlay = new EventEmitter<boolean>();\n}\n","<div class=\"flex group\">\n  <div class=\"flex group-hover:hidden track-order\">\n    @if (isPlaying) {\n      <img\n        class=\"animated-equalizer\"\n        src=\"/assets/images/equaliser-animated-green.gif\"\n        alt=\"Playing\" />\n    } @else {\n      <span class=\"text-description\">{{ index }}</span>\n    }\n  </div>\n\n\n  <as-play-button class=\"hidden pt-1 group-hover:block track-play-button\"\n    [flatIcon]=\"true\"\n    [isPlaying]=\"isPlaying\"\n    (togglePlay)=\"togglePlay.emit($event)\">\n  </as-play-button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MediaOrderComponent } from './media-order.component';\nimport { LetDirective, PushPipe } from '@ngrx/component';\nimport { PlayButtonModule } from '@angular-spotify/web/shared/ui/play-button';\n\n@NgModule({\n  imports: [CommonModule, LetDirective, PushPipe, PlayButtonModule],\n  declarations: [MediaOrderComponent],\n  exports: [MediaOrderComponent]\n})\nexport class MediaOrderModule {}\n","export * from './lib/media-table.module';\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'as-media-table-header',\n  templateUrl: './media-table-header.component.html',\n  styleUrls: ['./media-table-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MediaTableHeaderComponent {\n\n}\n","<div class=\"pb-4\">\n  <div class=\"playlist-tracks-header\">\n    <ng-content></ng-content>\n  </div>\n</div>","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'as-media-table-row',\n  templateUrl: './media-table-row.component.html',\n  styleUrls: ['./media-table-row.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MediaTableRowComponent {\n\n}\n","<ng-content></ng-content>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MediaTableHeaderComponent } from './media-table-header/media-table-header.component';\nimport { MediaTableRowComponent } from './media-table-row/media-table-row.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MediaTableHeaderComponent, MediaTableRowComponent],\n  exports: [MediaTableHeaderComponent, MediaTableRowComponent]\n})\nexport class MediaTableModule {}\n","export * from './lib/track-main-info.module';\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { RouteUtil } from '@angular-spotify/web/shared/utils';\n\n@Component({\n  selector: 'as-track-main-info',\n  templateUrl: './track-main-info.component.html',\n  styleUrls: ['./track-main-info.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrackMainInfoComponent {\n  @Input() track: SpotifyApi.TrackObjectFull | undefined;\n  @Input() isPlaying!: boolean;\n  @Input() isShowArtist = true;\n\n  getArtistRouteUrl(artist: SpotifyApi.ArtistObjectSimplified) {\n    return RouteUtil.getArtistRouteUrl(artist.id);\n  }\n}\n","@if (track) {\n  @if (track.album) {\n    <div class=\"track-cover\">\n      <as-media-cover [imageUrl]=\"track.album.images[0]?.url\"></as-media-cover>\n    </div>\n  }\n  <div class=\"flex flex-col\">\n    <div [ngClass]=\"['ellipsis-one-line', 'text-base', isPlaying ? 'text-primary': 'text-white']\">\n      {{ track.name }}\n    </div>\n    @if (isShowArtist) {\n      <div class=\"flex\">\n        @for (artist of track.artists | slice:0:2; track artist; let idx = $index) {\n          @if (idx !== 0) {\n            <span class=\"mr-1 comma-separator\"\n            >,</span>\n          }\n          <a class=\"text-description link-subtle ellipsis-one-line hover:underline\"\n            [routerLink]=\"getArtistRouteUrl(artist)\">\n            {{ artist.name }}\n          </a>\n        }\n      </div>\n    }\n  </div>\n}","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { TrackMainInfoComponent } from './track-main-info.component';\nimport { MediaCoverModule } from '@angular-spotify/web/shared/ui/media-cover';\n@NgModule({\n  imports: [CommonModule, RouterModule, MediaCoverModule],\n  declarations: [TrackMainInfoComponent],\n  exports: [TrackMainInfoComponent]\n})\nexport class TrackMainInfoModule {}\n"],"names":["EventEmitter","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","index","MediaOrderComponent","constructor","togglePlay","_","_2","selectors","inputs","isPlaying","outputs","decls","vars","consts","template","MediaOrderComponent_Template","rf","ctx","ɵɵtemplate","MediaOrderComponent_Conditional_2_Template","MediaOrderComponent_Conditional_3_Template","ɵɵlistener","MediaOrderComponent_Template_as_play_button_togglePlay_4_listener","$event","emit","ɵɵconditional","ɵɵproperty","CommonModule","LetDirective","PushPipe","PlayButtonModule","MediaOrderModule","_3","declarations","imports","exports","MediaTableHeaderComponent","ngContentSelectors","_c0","MediaTableHeaderComponent_Template","ɵɵprojection","MediaTableRowComponent","MediaTableRowComponent_Template","MediaTableModule","RouteUtil","track","album","images","url","TrackMainInfoComponent_Conditional_0_Conditional_4_For_2_Conditional_0_Template","idx_r3","getArtistRouteUrl","artist_r2","ɵɵtextInterpolate1","name","ɵɵrepeaterCreate","TrackMainInfoComponent_Conditional_0_Conditional_4_For_2_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","ɵɵpipeBind3","artists","TrackMainInfoComponent_Conditional_0_Conditional_0_Template","TrackMainInfoComponent_Conditional_0_Conditional_4_Template","ɵɵpureFunction1","isShowArtist","TrackMainInfoComponent","artist","id","TrackMainInfoComponent_Template","TrackMainInfoComponent_Conditional_0_Template","RouterModule","MediaCoverModule","TrackMainInfoModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}