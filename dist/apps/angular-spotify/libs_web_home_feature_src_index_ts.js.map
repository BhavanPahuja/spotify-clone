{"version":3,"file":"libs_web_home_feature_src_index_ts.js","mappings":"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","sources":["./libs/web/home/data-access/src/index.ts","./libs/web/home/data-access/src/lib/store/feature-playlists/feature-playlists.action.ts","./libs/web/home/data-access/src/lib/store/feature-playlists/feature-playlists.effect.ts","./libs/web/home/data-access/src/lib/store/feature-playlists/feature-playlists.reducer.ts","./libs/web/home/data-access/src/lib/store/feature-playlists/feature-playlists.selector.ts","./libs/web/home/data-access/src/lib/store/feature-playlists/index.ts","./libs/web/home/data-access/src/lib/store/recent-played-tracks/index.ts","./libs/web/home/data-access/src/lib/store/recent-played-tracks/recent-played-tracks.action.ts","./libs/web/home/data-access/src/lib/store/recent-played-tracks/recent-played-tracks.effect.ts","./libs/web/home/data-access/src/lib/store/recent-played-tracks/recent-played-tracks.reducer.ts","./libs/web/home/data-access/src/lib/store/recent-played-tracks/recent-played-tracks.selector.ts","./libs/web/home/feature/src/index.ts","./libs/web/home/feature/src/lib/home.component.ts","./libs/web/home/feature/src/lib/home.component.html","./libs/web/home/feature/src/lib/home.module.ts","./libs/web/home/ui/featured-playlists/src/index.ts","./libs/web/home/ui/featured-playlists/src/lib/featured-playlists.component.ts","./libs/web/home/ui/featured-playlists/src/lib/featured-playlists.component.html","./libs/web/home/ui/featured-playlists/src/lib/featured-playlists.module.ts","./libs/web/home/ui/greeting/src/index.ts","./libs/web/home/ui/greeting/src/lib/greeting.component.ts","./libs/web/home/ui/greeting/src/lib/greeting.component.html","./libs/web/home/ui/greeting/src/lib/greeting.module.ts","./libs/web/home/ui/recent-played/src/index.ts","./libs/web/home/ui/recent-played/src/lib/recent-played.component.ts","./libs/web/home/ui/recent-played/src/lib/recent-played.component.html","./libs/web/home/ui/recent-played/src/lib/recent-played.module.ts"],"sourcesContent":["export * from './lib/store/recent-played-tracks';\nexport * from './lib/store/feature-playlists';\n","import { createAction, props } from '@ngrx/store';\n\nexport const loadFeaturedPlaylists = createAction('[Home/Load Featured Playlists]');\nexport const loadFeaturedPlaylistsSuccess = createAction(\n  '[Home/Load Featured Playlists Success]',\n  props<{\n    response: SpotifyApi.ListOfFeaturedPlaylistsResponse;\n  }>()\n);\nexport const loadFeaturedPlaylistsError = createAction(\n  '[Home/Load Featured Playlists Error]',\n  props<{ error: string }>()\n);\n","import { AuthStore } from '@angular-spotify/web/auth/data-access';\nimport { BrowseApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { EMPTY } from 'rxjs';\nimport { catchError, map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { loadFeaturedPlaylists, loadFeaturedPlaylistsSuccess } from './feature-playlists.action';\n\n@Injectable({ providedIn: 'root' })\nexport class FeaturePlaylistsEffect {\n  constructor(\n    private browseApi: BrowseApiService,\n    private actions$: Actions,\n    private authStore: AuthStore\n  ) {}\n\n  loadFeaturedPlaylists$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadFeaturedPlaylists),\n      withLatestFrom(this.authStore.country$),\n      switchMap(([_, country]) =>\n        this.browseApi\n          .getAllFeaturedPlaylists({\n            limit: 50,\n            country: country || 'VN'\n          })\n          .pipe(\n            map((response) =>\n              loadFeaturedPlaylistsSuccess({\n                response\n              })\n            ),\n            catchError(() => EMPTY)\n          )\n      )\n    )\n  );\n}\n","import { GenericState } from '@angular-spotify/web/shared/data-access/models';\nimport { createReducer, on } from '@ngrx/store';\nimport {\n  loadFeaturedPlaylists,\n  loadFeaturedPlaylistsError,\n  loadFeaturedPlaylistsSuccess\n} from './feature-playlists.action';\n\nexport type FeaturePlaylistsState = GenericState<SpotifyApi.ListOfFeaturedPlaylistsResponse>;\n\nconst initialState: FeaturePlaylistsState = {\n  data: null,\n  status: 'pending',\n  error: null\n};\n\nexport const featuredPlaylistsFeatureKey = 'feature-playlists';\n\nexport const featuredPlaylistsReducer = createReducer(\n  initialState,\n  on(loadFeaturedPlaylists, (state) => ({ ...state, status: 'loading' as const })),\n  on(loadFeaturedPlaylistsSuccess, (state, { response }) => ({\n    ...state,\n    data: response,\n    status: 'success' as const,\n    error: null\n  })),\n  on(loadFeaturedPlaylistsError, (state, { error }) => ({\n    ...state,\n    error,\n    status: 'error' as const\n  }))\n);\n","import { RouteUtil } from '@angular-spotify/web/shared/utils';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { featuredPlaylistsFeatureKey, FeaturePlaylistsState } from './feature-playlists.reducer';\n\nexport const getFeaturePlaylistsState = createFeatureSelector<FeaturePlaylistsState>(\n  featuredPlaylistsFeatureKey\n);\n\nexport const getFeaturedPlaylists = createSelector(getFeaturePlaylistsState, ({ data }) => {\n  return data;\n});\n\nexport const getFeaturedPlaylistsWithRouteUrl = createSelector(\n  getFeaturedPlaylists,\n  (featuredPlaylists) => {\n    if (featuredPlaylists) {\n      return {\n        ...featuredPlaylists,\n        playlists: {\n          ...featuredPlaylists.playlists,\n          items: featuredPlaylists.playlists.items.map((item) => ({\n            ...item,\n            routeUrl: RouteUtil.getPlaylistRouteUrl(item.id)\n          }))\n        }\n      };\n    }\n\n    return featuredPlaylists;\n  }\n);\n","export * from './feature-playlists.action';\nexport * from './feature-playlists.effect';\nexport * from './feature-playlists.reducer';\nexport * from './feature-playlists.selector';\n","export * from './recent-played-tracks.action';\nexport * from './recent-played-tracks.effect';\nexport * from './recent-played-tracks.reducer';\nexport * from './recent-played-tracks.selector';\n","import { SpotifyApiRecentPlayerTracksResponse } from '@angular-spotify/web/shared/data-access/models';\nimport { createAction, props } from '@ngrx/store';\n\nexport const loadRecentTracks = createAction('[Home/Load Recent Played Tracks]');\nexport const loadRecentTracksSuccess = createAction(\n  '[Home/Load Recent Played Tracks Success]',\n  props<{\n    response: SpotifyApiRecentPlayerTracksResponse;\n  }>()\n);\nexport const loadRecentTracksError = createAction(\n  '[Home/Load Recent Played Tracks Error]',\n  props<{ error: string }>()\n);\n","import { Injectable } from '@angular/core';\nimport { PlayerApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { loadRecentTracks, loadRecentTracksSuccess } from './recent-played-tracks.action';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class RecentPlayedTracksEffect {\n  constructor(private playerApi: PlayerApiService, private actions$: Actions) {}\n\n  loadRecentTracks$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRecentTracks),\n      switchMap(() =>\n        this.playerApi.getRecentPlayedTracks().pipe(\n          map((response) =>\n            loadRecentTracksSuccess({\n              response\n            })\n          ),\n          catchError(() => EMPTY)\n        )\n      )\n    )\n  );\n}\n","import { GenericState, SpotifyApiRecentPlayerTracksResponse } from '@angular-spotify/web/shared/data-access/models';\nimport { createReducer, on } from '@ngrx/store';\nimport { loadRecentTracks, loadRecentTracksError, loadRecentTracksSuccess } from './recent-played-tracks.action';\n\nexport type RecentPlayedTracksState = GenericState<SpotifyApiRecentPlayerTracksResponse>;\n\nconst initialState: RecentPlayedTracksState = {\n  data: null,\n  status: 'pending',\n  error: null\n};\n\nexport const recentFeatureTracksFeatureKey = 'recentTracks';\n\nexport const recentPlayedTracksReducer = createReducer(\n  initialState,\n  on(loadRecentTracks, (state) => ({ ...state, status: 'loading' as const })),\n  on(loadRecentTracksSuccess, (state, { response }) => ({\n    ...state,\n    data: response,\n    status: 'success' as const,\n    error: null\n  })),\n  on(loadRecentTracksError, (state, { error }) => ({\n    ...state,\n    error,\n    status: 'error' as const\n  }))\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport {\n  recentFeatureTracksFeatureKey,\n  RecentPlayedTracksState\n} from './recent-played-tracks.reducer';\nimport { SelectorUtil } from '@angular-spotify/web/shared/utils';\n\nexport const getRecentPlayedTracksState = createFeatureSelector<RecentPlayedTracksState>(\n  recentFeatureTracksFeatureKey\n);\n\nexport const getRecentPlayedTracksLoading = createSelector(\n  getRecentPlayedTracksState,\n  SelectorUtil.isLoading\n);\n\nexport const getRecentPlayedTracks = createSelector(getRecentPlayedTracksState, ({ data }) => {\n  if (!data) {\n    return null;\n  }\n  return data.items\n    .filter(({ track }, idx, arr) => arr.findIndex((item) => item.track.id === track.id) === idx)\n    .slice(0, 20);\n});\n","export * from './lib/home.module';\n","import { loadFeaturedPlaylists, loadRecentTracks } from '@angular-spotify/web/home/data-access';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'as-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HomeComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n    this.store.dispatch(loadRecentTracks());\n    this.store.dispatch(loadFeaturedPlaylists());\n  }\n}\n","<div class=\"content-spacing\">\n  <as-greeting></as-greeting>\n  <as-recent-played></as-recent-played>\n  <as-featured-playlists></as-featured-playlists>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { RouterModule } from '@angular/router';\nimport { StoreModule } from '@ngrx/store';\nimport {\n  RecentPlayedTracksEffect,\n  recentFeatureTracksFeatureKey,\n  recentPlayedTracksReducer,\n  FeaturePlaylistsEffect,\n  featuredPlaylistsFeatureKey,\n  featuredPlaylistsReducer\n} from '@angular-spotify/web/home/data-access';\nimport { EffectsModule } from '@ngrx/effects';\nimport { GreetingModule } from '@angular-spotify/web/home/ui/greeting';\nimport { FeaturedPlaylistsModule } from '@angular-spotify/web/home/ui/featured-playlists';\nimport { RecentPlayedModule } from '@angular-spotify/web/home/ui/recent-played';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomeComponent\n      }\n    ]),\n    StoreModule.forFeature(recentFeatureTracksFeatureKey, recentPlayedTracksReducer),\n    StoreModule.forFeature(featuredPlaylistsFeatureKey, featuredPlaylistsReducer),\n    EffectsModule.forFeature([RecentPlayedTracksEffect, FeaturePlaylistsEffect]),\n    GreetingModule,\n    RecentPlayedModule,\n    FeaturedPlaylistsModule\n  ],\n  declarations: [HomeComponent],\n  exports: [HomeComponent]\n})\nexport class HomeModule {}\n","export * from './lib/featured-playlists.module';\n","import { getFeaturedPlaylistsWithRouteUrl } from '@angular-spotify/web/home/data-access';\nimport { PlayerApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\n@Component({\n  selector: 'as-featured-playlists',\n  templateUrl: './featured-playlists.component.html',\n  styleUrls: ['./featured-playlists.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FeaturedPlaylistsComponent {\n  featuredPlaylists$ = this.store.pipe(select(getFeaturedPlaylistsWithRouteUrl));\n\n  constructor(private store: Store, private playerApi: PlayerApiService) {}\n\n  togglePlay(isPlaying: boolean, playlistUri: string) {\n    this.playerApi\n      .togglePlay(isPlaying, {\n        context_uri: playlistUri\n      })\n      .subscribe();\n  }\n}\n","@if (featuredPlaylists$ | async; as data) {\n  <h2 class=\"mt-8 mb-4 text-heading\">{{ data.message }}</h2>\n  <div class=\"common-grid\">\n    @for (playlist of data.playlists.items; track playlist) {\n      <as-card\n        [title]=\"playlist.name\"\n        [description]=\"playlist.description\"\n        [imageUrl]=\"playlist.images[0]?.url!\"\n        [uri]=\"playlist.uri\"\n        [routerUrl]=\"playlist.routeUrl\"\n        (togglePlay)=\"togglePlay($event, playlist.uri)\">\n      </as-card>\n    }\n  </div>\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FeaturedPlaylistsComponent } from './featured-playlists.component';\nimport { CardComponent } from '@angular-spotify/web/shared/ui/media';\n\n@NgModule({\n  imports: [CommonModule, CardComponent],\n  declarations: [FeaturedPlaylistsComponent],\n  exports: [FeaturedPlaylistsComponent]\n})\nexport class FeaturedPlaylistsModule {}\n","export * from './lib/greeting.module';\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'as-greeting',\n  templateUrl: './greeting.component.html',\n  styleUrls: ['./greeting.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GreetingComponent {\n  get message() {\n    const now = new Date();\n    const hours = now.getHours();\n    const text = hours < 12 ? 'Morning 🌞' : hours < 18 ? 'Afternoon 🌤' : 'Evening 🌙';\n    return `Good ${text} ${randomEmoji()}`\n  }\n}\n\nfunction randomEmoji(): string {\n  const emojis: string[] = [\"😘\", \"🤓\", \"😜\", \"🤪\", \"😎\", \"🤩\", \"🥳\", \"🤘\", \"🎉\", \"🔥\"];\n  return emojis[Math.floor(Math.random() * emojis.length)];\n}\n","<h2 class=\"text-3xl text-white\">{{ message }}</h2>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GreetingComponent } from './greeting.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [GreetingComponent],\n  exports: [GreetingComponent]\n})\nexport class GreetingModule {}\n","export * from './lib/recent-played.module';\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  getRecentPlayedTracks,\n  getRecentPlayedTracksLoading\n} from '@angular-spotify/web/home/data-access';\nimport { PlayerApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { RouteUtil } from '@angular-spotify/web/shared/utils';\n\n@Component({\n  selector: 'as-recent-played',\n  templateUrl: './recent-played.component.html',\n  styleUrls: ['./recent-played.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RecentPlayedComponent {\n  recentTracks$ = this.store.pipe(select(getRecentPlayedTracks));\n  isLoading$ = this.store.pipe(select(getRecentPlayedTracksLoading));\n\n  constructor(private store: Store, private playerApi: PlayerApiService) {}\n\n  togglePlayTrack(isPlaying: boolean, trackUri: string) {\n    this.playerApi\n      .togglePlay(isPlaying, {\n        uris: [trackUri]\n      })\n      .subscribe();\n  }\n\n  getAlbumUrl(albumId: string){\n    return RouteUtil.getAlbumRouteUrl(albumId)\n  }\n}\n","<h2 class=\"mt-8 mb-4 text-heading\">Recently Played</h2>\n\n@if (recentTracks$ | async; as recentTracks) {\n  <div\n    class=\"common-grid\">\n    @for (historyObject of recentTracks; track historyObject) {\n      <as-card\n        [title]=\"historyObject.track.name\"\n        [description]=\"historyObject.track.artists[0]?.name!\"\n        [imageUrl]=\"historyObject.track.album.images[0]?.url!\"\n        [routerUrl]=\"getAlbumUrl(historyObject.track.album.id)\"\n        [uri]=\"historyObject.track.uri\"\n        (togglePlay)=\"togglePlayTrack($event, historyObject.track.uri)\">\n      </as-card>\n    }\n  </div>\n}\n@if (isLoading$ | async) {\n  <as-spinner>\n  </as-spinner>\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RecentPlayedComponent } from './recent-played.component';\nimport { CardComponent } from '@angular-spotify/web/shared/ui/media';\nimport { SpinnerModule } from '@angular-spotify/web/shared/ui/spinner';\n@NgModule({\n  imports: [CommonModule, CardComponent, SpinnerModule],\n  declarations: [RecentPlayedComponent],\n  exports: [RecentPlayedComponent]\n})\nexport class RecentPlayedModule {}\n"],"names":["createAction","props","loadFeaturedPlaylists","loadFeaturedPlaylistsSuccess","loadFeaturedPlaylistsError","AuthStore","BrowseApiService","Actions","createEffect","ofType","EMPTY","catchError","map","switchMap","withLatestFrom","FeaturePlaylistsEffect","constructor","browseApi","actions$","authStore","loadFeaturedPlaylists$","pipe","country$","_","country","getAllFeaturedPlaylists","limit","response","i0","ɵɵinject","i1","i2","i3","_2","factory","ɵfac","providedIn","createReducer","on","initialState","data","status","error","featuredPlaylistsFeatureKey","featuredPlaylistsReducer","state","RouteUtil","createFeatureSelector","createSelector","getFeaturePlaylistsState","getFeaturedPlaylists","getFeaturedPlaylistsWithRouteUrl","featuredPlaylists","playlists","items","item","routeUrl","getPlaylistRouteUrl","id","loadRecentTracks","loadRecentTracksSuccess","loadRecentTracksError","PlayerApiService","RecentPlayedTracksEffect","playerApi","loadRecentTracks$","getRecentPlayedTracks","recentFeatureTracksFeatureKey","recentPlayedTracksReducer","SelectorUtil","getRecentPlayedTracksState","getRecentPlayedTracksLoading","isLoading","filter","track","idx","arr","findIndex","slice","Store","HomeComponent","store","ngOnInit","dispatch","ɵɵdirectiveInject","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","CommonModule","RouterModule","StoreModule","EffectsModule","GreetingModule","FeaturedPlaylistsModule","RecentPlayedModule","HomeModule","_3","forChild","path","component","forFeature","declarations","imports","StoreFeatureModule","EffectsFeatureModule","exports","select","ɵɵlistener","FeaturedPlaylistsComponent_Conditional_0_For_4_Template_as_card_togglePlay_0_listener","$event","playlist_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","togglePlay","uri","ɵɵproperty","name","description","images","url","ɵɵtext","ɵɵrepeaterCreate","FeaturedPlaylistsComponent_Conditional_0_For_4_Template","ɵɵrepeaterTrackByIdentity","ɵɵadvance","ɵɵtextInterpolate","data_r4","message","ɵɵrepeater","FeaturedPlaylistsComponent","featuredPlaylists$","isPlaying","playlistUri","context_uri","subscribe","FeaturedPlaylistsComponent_Template","ɵɵtemplate","FeaturedPlaylistsComponent_Conditional_0_Template","ɵɵconditional","tmp_0_0","ɵɵpipeBind1","CardComponent","GreetingComponent","now","Date","hours","getHours","text","randomEmoji","GreetingComponent_Template","emojis","Math","floor","random","length","RecentPlayedComponent_Conditional_2_For_2_Template_as_card_togglePlay_0_listener","historyObject_r2","togglePlayTrack","artists","album","getAlbumUrl","RecentPlayedComponent_Conditional_2_For_2_Template","RecentPlayedComponent","recentTracks$","isLoading$","trackUri","uris","albumId","getAlbumRouteUrl","RecentPlayedComponent_Template","RecentPlayedComponent_Conditional_2_Template","RecentPlayedComponent_Conditional_4_Template","SpinnerModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}