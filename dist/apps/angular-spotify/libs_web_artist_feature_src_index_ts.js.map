{"version":3,"file":"libs_web_artist_feature_src_index_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEoE;AACI;AACe;AACrB;AACrB;;;;;AAOvC,MAAOS,oBAAqB,SAAQT,iEAAoC;EAmC5EU,YACmBC,WAAwB,EACxBC,SAAoB,EACpBC,SAA2B;IAE5C,KAAK,CAAuB,EAAE,CAAC;IAJd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,SAAS,GAATA,SAAS;IArCnB,KAAAC,KAAK,GAAG,IAAI,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC;IAClC,KAAAC,OAAO,GAAG,IAAI,CAACH,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACG,MAAM,CAAC;IACtC,KAAAC,MAAM,GAAG,IAAI,CAACL,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACK,KAAK,CAAC;IAEpC,KAAAC,GAAG,GAAG,IAAI,CAACP,MAAM,CACxB,IAAI,CAACD,KAAK,EACV,IAAI,CAACM,MAAM,EACX,IAAI,CAACF,OAAO,EACZ,CAACD,IAAI,EAAEI,KAAK,EAAEF,MAAM,MAAM;MAAEF,IAAI;MAAEI,KAAK;MAAEF;IAAM,CAAE,CAAC,EAClD;MAAEI,QAAQ,EAAE;IAAI,CAAE,CACnB;IAED,KAAAC,mBAAmB,GAAG,IAAI,CAACC,MAAM,CAAUC,OAAO,IAChDA,OAAO,CAACC,IAAI,CACVzB,sDAAM,CAAC0B,QAAQ,IAAI,CAAC,CAACA,QAAQ,CAAC,EAC9BxB,mDAAG,CAAC,MAAM,IAAI,CAACyB,UAAU,CAAC;MAAEV,MAAM,EAAE,SAAS;MAAEE,KAAK,EAAE;IAAI,CAAE,CAAC,CAAC,EAC9DhB,8DAAc,CAAC,IAAI,CAACO,SAAS,CAACkB,QAAQ,CAAC,EACvC3B,yDAAS,CAAC,CAAC,CAACyB,QAAQ,EAAEG,OAAO,CAAC,KAC5B,IAAI,CAAClB,SAAS,CAACmB,kBAAkB,CAACJ,QAAQ,EAAEG,OAAO,CAAC,CAACJ,IAAI,CACvD1B,kEAAW,CACRgB,IAAI,IAAI;MACP,IAAI,CAACY,UAAU,CAAC;QACdZ,IAAI;QACJE,MAAM,EAAE,SAAS;QACjBE,KAAK,EAAE;OACR,CAAC;IACJ,CAAC,EACAA,KAAK,IAAK,IAAI,CAACQ,UAAU,CAAC;MAAEV,MAAM,EAAE,OAAO;MAAEE,KAAK,EAAEA;IAA0B,CAAE,CAAC,CACnF,CACF,CACF,CACF,CACF;IAQC,IAAI,CAACG,mBAAmB,CACtB,IAAI,CAACb,WAAW,CAACsB,eAAe,CACjC;EACH;EAAC,QAAAC,CAAA;qBA5CUzB,oBAAoB,EAAA0B,sDAAA,CAAAE,sDAAA,GAAAF,sDAAA,CAAAG,4EAAA,GAAAH,sDAAA,CAAAI,iGAAA;EAAA;EAAA,QAAAC,EAAA;WAApB/B,oBAAoB;IAAAgC,OAAA,EAApBhC,oBAAoB,CAAAiC;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACZsD;AACV;AAE5B;AACmB;AAEL;;;;AAOzD,MAAOlC,WAAY,SAAQR,iEAA2B;EAiD1DU,YAAoBqC,KAAqB,EAAUlC,SAA2B;IAC5E,KAAK,CAAc,EAAE,CAAC;IADJ,KAAAkC,KAAK,GAALA,KAAK;IAA0B,KAAAlC,SAAS,GAATA,SAAS;IAhD5D,KAAAoB,eAAe,GAAuB,IAAI,CAACc,KAAK,CAACC,MAAM,CAACrB,IAAI,CAC1DmB,qDAAK,CAACH,yEAAU,CAACM,aAAa,CAACC,QAAQ,CAAC,EACxChD,sDAAM,CAAE0B,QAAgB,IAAK,CAAC,CAACA,QAAQ,CAAC,CACzC;IAED,KAAAuB,gBAAgB,GAAG,IAAI,CAACpC,MAAM,CAAC6B,2EAAY,CAACQ,SAAS,CAAC;IAEtD,KAAAC,OAAO,GAAG,IAAI,CAACpB,eAAe,CAACN,IAAI,CACjCvB,mDAAG,CAAEwB,QAAQ,IAAI;MACf,IAAI,CAACC,UAAU,CAAC;QACdD;OACD,CAAC;MACF,IAAI,CAAC0B,UAAU,CAAC;QAAE1B;MAAQ,CAAE,CAAC;IAC/B,CAAC,CAAC,EACFzB,yDAAS,CAAC,MAAM,IAAI,CAACY,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAC5C;IAGD,KAAAqC,UAAU,GAAG,IAAI,CAAC7B,MAAM,CAAwBC,OAAO,IACrDA,OAAO,CAACC,IAAI,CACVvB,mDAAG,CAAC,MAAK;MACP,IAAI,CAACyB,UAAU,CAAC;QACdV,MAAM,EAAE,SAAS;QACjBE,KAAK,EAAE;OACR,CAAC;IACJ,CAAC,CAAC,EACFlB,yDAAS,CAAC,CAAC;MAAEyB;IAAQ,CAAE,KACrB,IAAI,CAACf,SAAS,CAAC0C,SAAS,CAAC3B,QAAQ,CAAC,CAACD,IAAI,CACrC1B,kEAAW,CACRuD,MAAM,IAAI;MACT,IAAI,CAAC3B,UAAU,CAAC;QACdZ,IAAI,EAAEuC,MAAM;QACZrC,MAAM,EAAE,SAAS;QACjBE,KAAK,EAAE;OACR,CAAC;IACJ,CAAC,EACAA,KAAK,IAAI;MACR,IAAI,CAACQ,UAAU,CAAC;QACdV,MAAM,EAAE,OAAO;QACfE,KAAK,EAAEA;OACR,CAAC;IACJ,CAAC,CACF,CACF,CACF,CACF,CACF;EAID;EAAC,QAAAa,CAAA;qBAnDU1B,WAAW,EAAA2B,sDAAA,CAAAE,2DAAA,GAAAF,sDAAA,CAAAG,iGAAA;EAAA;EAAA,QAAAE,EAAA;WAAXhC,WAAW;IAAAiC,OAAA,EAAXjC,WAAW,CAAAkC;EAAA;;;;;;;;;;;;;;;;;;ACdO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AECuC;;;;;;;;;ICShEP,4DAAA,aAAuB;IACrBA,uDAAA,2BAAwD;IAC1DA,0DAAA,EAAM;;;IADeA,uDAAA,EAAe;IAAfA,wDAAA,gBAAe;;;;;IAVxCA,4DAAA,aAA6B;IAC3BA,uDAAA,0BAMmB;IACnBA,wDAAA,IAAA4B,oDAAA,iBAAgC;;IAKhC5B,uDAAA,2BAA6C;IAC/CA,0DAAA,EAAM;;;;;IAZFA,uDAAA,EAAiB;IAGjBA,wDAHA,kBAAiB,UAAA6B,SAAA,CAAAC,IAAA,CACI,aAAAD,SAAA,CAAAE,MAAA,qBAAAF,SAAA,CAAAE,MAAA,IAAAC,GAAA,CACa,kBAAAH,SAAA,CAAAI,SAAA,CAAAC,KAAA,CACM;IAG1ClC,uDAAA,EAIC;IAJDA,2DAAA,IAAAA,yDAAA,OAAAqC,MAAA,CAAArB,gBAAA,WAIC;;;ADHC,MAAOsB,eAAe;EAI1B/D,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAA0C,OAAO,GAAG,IAAI,CAAC1C,WAAW,CAAC0C,OAAO;IAClC,KAAAF,gBAAgB,GAAG,IAAI,CAACxC,WAAW,CAACwC,gBAAgB;EAEL;EAAC,QAAAjB,CAAA;qBAJrCuC,eAAe,EAAAtC,+DAAA,CAAAE,gFAAA;EAAA;EAAA,QAAAG,EAAA;UAAfiC,eAAe;IAAAE,SAAA;IAAAC,QAAA,GAAAzC,gEAAA,CAFf,CAAC3B,gFAAW,CAAC;IAAAsE,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR1BhD,wDAAA,IAAAkD,sCAAA,iBAAkC;;;;;QAAlClD,2DAAA,KAAAmD,OAAA,GAAAnD,yDAAA,OAAAiD,GAAA,CAAA/B,OAAA,aAAAiC,OAAA,CAgBC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACf8C;AACM;AACkC;AACxC;AACgB;AACmB;AACK;AACE;;;AAkBnF,MAAOO,YAAY;EAAA,QAAA3D,CAAA;qBAAZ2D,YAAY;EAAA;EAAA,QAAArD,EAAA;UAAZqD;EAAY;EAAA,QAAAC,EAAA;cAfrBP,yDAAY,EACZC,iGAAoB,EACpBC,yDAAY,CAACM,QAAQ,CAAC,CACpB;MACEC,IAAI,EAAE,IAAIrD,yEAAU,CAACM,aAAa,CAACC,QAAQ,EAAE;MAC7C+C,SAAS,EAAExB,8DAAeA;KAC3B,CACF,CAAC,EACFiB,4FAAkB,EAElBE,mGAAqB;EAAA;;;sHAKZC,YAAY;IAAAK,YAAA,GAHRzB,8DAAe;IAAA0B,OAAA,GAZ5BZ,yDAAY,EACZC,iGAAoB,EAAAnD,yDAAA,EAOpBqD,4FAAkB,EAClBC,iGAAsB,EACtBC,mGAAqB;IAAAQ,OAAA,GAGb3B,8DAAe;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExBiD;AAEvB;AACyB;AACS;;;;;;;;;;;;;ICFrFtC,qEAAA,GAAsD;IACpDA,4DAAA,wBAEuD;IAAvCA,wDAAA,wBAAAyE,qFAAAC,MAAA;MAAA1E,2DAAA,CAAA4E,GAAA;MAAA,MAAAvC,MAAA,GAAArC,2DAAA;MAAA,OAAAA,yDAAA,CAAcqC,MAAA,CAAA0C,eAAA,CAAAL,MAAA,CAAuB;IAAA,EAAC;IACtD1E,0DAAA,EAAiB;IACjBA,uDAAA,4BAGqB;IACrBA,4DAAA,WACgC;IAC9BA,oDAAA,GACF;IAAAA,0DAAA,EAAI;;;;;;IAXYA,uDAAA,EAAe;IACfA,wDADA,UAAAqC,MAAA,CAAA4C,KAAA,CAAe,cAAAC,YAAA,CACS;IAGpBlF,uDAAA,EAAqB;IAErBA,wDAFA,UAAAqC,MAAA,CAAA8C,KAAA,CAAqB,uBACC,cAAAD,YAAA,CACC;IAGxClF,uDAAA,EAA4B;IAA5BA,wDAAA,eAAAqC,MAAA,CAAA+C,aAAA,CAA4B;IAC7BpF,uDAAA,EACF;IADEA,gEAAA,MAAAqC,MAAA,CAAA8C,KAAA,CAAAG,KAAA,CAAAxD,IAAA,MACF;;;ADFE,MAAOyD,uBAAuB;EAMlC,IAAIJ,KAAKA,CAAA;IACP,OAAO,IAAI,CAACK,MAAM;EACpB;EAEA,IACIL,KAAKA,CAACM,KAAiC;IACzC,IAAI,CAACD,MAAM,GAAGC,KAAK;IACnB,IAAIA,KAAK,EAAE;MACT,IAAI,CAACL,aAAa,GAAGlB,wEAAS,CAACwB,gBAAgB,CAACD,KAAK,CAACH,KAAK,CAACK,EAAE,CAAC;IACjE;EACF;EAEApH,YAAoBqH,aAA4B,EAAUC,SAA2B;IAAjE,KAAAD,aAAa,GAAbA,aAAa;IAAyB,KAAAC,SAAS,GAATA,SAAS;EAAqB;EAExFC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,GAAGtF,2EAAY,CAACuF,oBAAoB,CACtD7B,mDAAa,CAAC,CAACC,wCAAE,CAAC,IAAI,CAACe,KAAK,EAAEQ,EAAE,CAAC,EAAE,IAAI,CAACC,aAAa,CAACK,SAAS,CAAC,CAAC,CAClE;EACH;EAEAlB,eAAeA,CAACmB,SAAkB;IAChC,IAAI,CAAC,IAAI,CAACf,KAAK,EAAEgB,GAAG,EAAE;MACpB;IACF;IAEA,IAAI,CAACN,SAAS,CACXO,UAAU,CAACF,SAAS,EAAE;MACrBG,WAAW,EAAE,IAAI,CAAClB,KAAK,CAACG,KAAK,CAACa,GAAG;MACjCG,MAAM,EAAE;QACNC,QAAQ,EAAG,IAAI,CAACpB,KAAK,CAACqB,YAAY,GAAG,CAAC,IAAK;;KAE9C,CAAC,CACDC,SAAS,EAAE,CAAC,CAAC;EAClB;EAAC,QAAA1G,CAAA;qBAvCUwF,uBAAuB,EAAAvF,+DAAA,CAAAE,wFAAA,GAAAF,+DAAA,CAAAG,iGAAA;EAAA;EAAA,QAAAE,EAAA;UAAvBkF,uBAAuB;IAAA/C,SAAA;IAAAkE,MAAA;MAAAzB,KAAA;MAAAE,KAAA;IAAA;IAAAxC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA6D,iCAAA3D,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZpChD,4DAAA,4BACwD;QAApCA,wDAAA,sBAAA4G,wEAAA;UAAA,OAAY3D,GAAA,CAAA8B,eAAA,CAAgB,KAAK,CAAC;QAAA,EAAC;QACrD/E,wDAAA,IAAA6G,+CAAA,0BAAsD;QActD7G,4DAAA,aAA8B;QAC5BA,oDAAA,GACF;;QACFA,0DADE,EAAM,EACa;;;QAjBJA,uDAAA,EAAyB;QAAzBA,wDAAA,YAAAiD,GAAA,CAAA8C,eAAA,CAAyB;QAetC/F,uDAAA,GACF;QADEA,gEAAA,MAAAA,yDAAA,OAAAiD,GAAA,CAAAkC,KAAA,CAAA2B,WAAA,OACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB6C;AACwB;AACO;AACA;AACO;AACA;AAC5B;AACV;;AAezC,MAAOO,oBAAoB;EAAA,QAAAtH,CAAA;qBAApBsH,oBAAoB;EAAA;EAAA,QAAAhH,EAAA;UAApBgH;EAAoB;EAAA,QAAA1D,EAAA;cAX7BP,yDAAY,EACZ2D,wFAAgB,EAChBC,wFAAgB,EAChBC,+FAAmB,EACnBC,+FAAkB,EAElB5D,yDAAY;EAAA;;;sHAKH+D,oBAAoB;IAAAtD,YAAA,GAHhBwB,gFAAuB;IAAAvB,OAAA,GARpCZ,yDAAY,EACZ2D,wFAAgB,EAChBC,wFAAgB,EAChBC,+FAAmB,EACnBC,+FAAkB,EAClBC,yDAAY,EAAEC,qDAAQ,EACtB9D,yDAAY;IAAAW,OAAA,GAGJsB,gFAAuB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpB4C;;;;;;;IAQvEvF,uDAAA,6BAGuB;;;;;IADrBA,wDADA,UAAAsH,MAAA,KAAiB,UAAAC,QAAA,CACF;;;;;IAHnBvH,8DAAA,IAAAyH,qDAAA,kCAAAzH,uEAAA,CAKC;;;;IALDA,wDAAA,CAAA4H,KAAA,CAAA9I,IAAA,kBAAA8I,KAAA,CAAA9I,IAAA,CAAA+I,MAAA,CAKC;;;AAKD,MAAOC,wBAAwB;EAEnCvJ,YAA6BwJ,KAA2B;IAA3B,KAAAA,KAAK,GAALA,KAAK;IADzB,KAAA5I,GAAG,GAAG,IAAI,CAAC4I,KAAK,CAAC5I,GAAG;EAC8B;EAAC,QAAAY,CAAA;qBAFjD+H,wBAAwB,EAAA9H,+DAAA,CAAAE,yFAAA;EAAA;EAAA,QAAAG,EAAA;UAAxByH,wBAAwB;IAAAtF,SAAA;IAAAC,QAAA,GAAAzC,gEAAA,CAFxB,CAAC1B,yFAAoB,CAAC;IAAAqE,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAkF,kCAAAhF,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAV/BhD,4DAAA,YAAmC;QAAAA,oDAAA,cAAO;QAAAA,0DAAA,EAAK;QAC/CA,wDAAA,IAAAiI,+CAAA,OAA0B;;;;;QAA1BjI,uDAAA,GAOC;QAPDA,2DAAA,KAAAmD,OAAA,GAAAnD,yDAAA,OAAAiD,GAAA,CAAA9D,GAAA,aAAAgE,OAAA,CAOC;;;;;;;;;;;;;;;;;;;;;;;;;ACb0C;AACsC;AACZ;AACc;;AAOjF,MAAOM,qBAAqB;EAAA,QAAA1D,CAAA;qBAArB0D,qBAAqB;EAAA;EAAA,QAAApD,EAAA;UAArBoD;EAAqB;EAAA,QAAAE,EAAA;cAJtBP,yDAAY,EAAE8D,+FAAkB,EAAEG,iGAAoB;EAAA;;;sHAIrD5D,qBAAqB;IAAAM,YAAA,GAFjB+D,kFAAwB;IAAA9D,OAAA,GAF7BZ,yDAAY,EAAE8D,+FAAkB,EAAEG,iGAAoB;IAAApD,OAAA,GACtD6D,kFAAwB;EAAA;AAAA","sources":["./libs/web/artist/data-access/src/index.ts","./libs/web/artist/data-access/src/lib/store/artist-top-tracks.store.ts","./libs/web/artist/data-access/src/lib/store/artist.store.ts","./libs/web/artist/data-access/src/lib/store/index.ts","./libs/web/artist/feature/src/index.ts","./libs/web/artist/feature/src/lib/artist.component.ts","./libs/web/artist/feature/src/lib/artist.component.html","./libs/web/artist/feature/src/lib/artist.module.ts","./libs/web/artist/ui/artist-top-track/src/index.ts","./libs/web/artist/ui/artist-top-track/src/lib/artist-top-track.component.ts","./libs/web/artist/ui/artist-top-track/src/lib/artist-top-track.component.html","./libs/web/artist/ui/artist-top-track/src/lib/artist-top-track.module.ts","./libs/web/artist/ui/artist-top-tracks/src/index.ts","./libs/web/artist/ui/artist-top-tracks/src/lib/artist-top-tracks.component.ts","./libs/web/artist/ui/artist-top-tracks/src/lib/artist-top-tracks.module.ts"],"sourcesContent":["export * from './lib/store';\n","import { GenericState } from '@angular-spotify/web/shared/data-access/models';\nimport { Injectable } from '@angular/core';\nimport { ComponentStore, tapResponse } from '@ngrx/component-store';\nimport { filter, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { ArtistApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { AuthStore } from '@angular-spotify/web/auth/data-access';\nimport { ArtistStore } from './artist.store';\n\ninterface ArtistTopTracksState extends GenericState<SpotifyApi.ArtistsTopTracksResponse> {\n  artistId: string;\n}\n\n@Injectable()\nexport class ArtistTopTracksStore extends ComponentStore<ArtistTopTracksState> {\n  readonly data$ = this.select((s) => s.data);\n  readonly status$ = this.select((s) => s.status);\n  readonly error$ = this.select((s) => s.error);\n\n  readonly vm$ = this.select(\n    this.data$,\n    this.error$,\n    this.status$,\n    (data, error, status) => ({ data, error, status }),\n    { debounce: true }\n  );\n\n  loadArtistTopTracks = this.effect<string>((params$) =>\n    params$.pipe(\n      filter(artistId => !!artistId),\n      tap(() => this.patchState({ status: 'loading', error: null })),\n      withLatestFrom(this.authStore.country$),\n      switchMap(([artistId, country]) =>\n        this.artistApi.getArtistTopTracks(artistId, country).pipe(\n          tapResponse(\n            (data) => {\n              this.patchState({\n                data,\n                status: 'success',\n                error: ''\n              });\n            },\n            (error) => this.patchState({ status: 'error', error: error as unknown as string })\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private readonly artistStore: ArtistStore,\n    private readonly authStore: AuthStore,\n    private readonly artistApi: ArtistApiService\n  ) {\n    super(<ArtistTopTracksState>{});\n    this.loadArtistTopTracks(\n      this.artistStore.artistIdParams$\n    );\n  }\n}\n","import { GenericState } from '@angular-spotify/web/shared/data-access/models';\nimport { ArtistApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { RouterUtil, SelectorUtil } from '@angular-spotify/web/shared/utils';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ComponentStore, tapResponse } from '@ngrx/component-store';\nimport { Observable } from 'rxjs';\nimport { filter, pluck, switchMap, tap } from 'rxjs/operators';\n\ninterface ArtistState extends GenericState<SpotifyApi.ArtistObjectFull> {\n  artistId: string;\n}\n\n@Injectable()\nexport class ArtistStore extends ComponentStore<ArtistState> {\n  artistIdParams$: Observable<string> = this.route.params.pipe(\n    pluck(RouterUtil.Configuration.ArtistId),\n    filter((artistId: string) => !!artistId)\n  );\n\n  isArtistLoading$ = this.select(SelectorUtil.isLoading);\n\n  artist$ = this.artistIdParams$.pipe(\n    tap((artistId) => {\n      this.patchState({\n        artistId\n      });\n      this.loadArtist({ artistId });\n    }),\n    switchMap(() => this.select((s) => s.data))\n  );\n\n\n  loadArtist = this.effect<{ artistId: string }>((params$) =>\n    params$.pipe(\n      tap(() => {\n        this.patchState({\n          status: 'loading',\n          error: null\n        });\n      }),\n      switchMap(({ artistId }) =>\n        this.artistApi.getArtist(artistId).pipe(\n          tapResponse(\n            (artist) => {\n              this.patchState({\n                data: artist,\n                status: 'success',\n                error: ''\n              });\n            },\n            (error) => {\n              this.patchState({\n                status: 'error',\n                error: error as unknown as string\n              });\n            }\n          )\n        )\n      )\n    )\n  );\n\n  constructor(private route: ActivatedRoute, private artistApi: ArtistApiService) {\n    super(<ArtistState>{});\n  }\n}\n","export * from './artist.store';\nexport * from './artist-top-tracks.store';\n","export * from './lib/artist.module';\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ArtistStore } from '@angular-spotify/web/artist/data-access';\n\n@Component({\n  selector: 'as-artist',\n  templateUrl: './artist.component.html',\n  styleUrls: ['./artist.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [ArtistStore]\n})\nexport class ArtistComponent {\n  artist$ = this.artistStore.artist$;\n  isArtistLoading$ = this.artistStore.isArtistLoading$;\n\n  constructor(private artistStore: ArtistStore) {}\n}","@if (artist$ | async; as artist) {\n  <div class=\"content-spacing\">\n    <as-media-summary\n      [type]=\"'Artist'\"\n      [title]=\"artist.name\"\n      [imageUrl]=\"artist.images[0]?.url\"\n      [followerCount]=\"artist.followers.total\"\n      >\n    </as-media-summary>\n    @if (isArtistLoading$ | async) {\n      <div class=\"px-8 mb-5\">\n        <as-tracks-loading [avatar]=\"true\"> </as-tracks-loading>\n      </div>\n    }\n    <as-artist-top-tracks></as-artist-top-tracks>\n  </div>\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ArtistComponent } from './artist.component';\nimport { WorkInProgressModule } from '@angular-spotify/web/shared/ui/work-in-progress';\nimport { RouterModule } from '@angular/router';\nimport { RouterUtil } from '@angular-spotify/web/shared/utils';\nimport { MediaSummaryModule } from '@angular-spotify/web/shared/ui/media-summary';\nimport { TracksLoadingComponent } from '@angular-spotify/web/shared/ui/tracks-loading';\nimport { ArtistTopTracksModule } from '@angular-spotify/web/artist/ui/artist-top-tracks';\n@NgModule({\n  imports: [\n    CommonModule,\n    WorkInProgressModule,\n    RouterModule.forChild([\n      {\n        path: `:${RouterUtil.Configuration.ArtistId}`,\n        component: ArtistComponent\n      }\n    ]),\n    MediaSummaryModule,\n    TracksLoadingComponent,\n    ArtistTopTracksModule\n  ],\n  declarations: [ArtistComponent],\n  exports: [ArtistComponent]\n})\nexport class ArtistModule {}\n","export * from './lib/artist-top-track.module';\n","import { RouteUtil, SelectorUtil } from '@angular-spotify/web/shared/utils';\nimport { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { PlaybackStore } from '@angular-spotify/web/shared/data-access/store';\nimport { PlayerApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\n\n@Component({\n  selector: 'as-artist-top-track',\n  templateUrl: './artist-top-track.component.html',\n  styleUrls: ['./artist-top-track.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ArtistTopTrackComponent implements OnInit {\n  albumRouteUrl!: string;\n  isTrackPlaying$!: Observable<boolean>;\n  \n  @Input() order!: number;   \n  private _track!: SpotifyApi.TrackObjectFull;\n  get track(): SpotifyApi.TrackObjectFull {\n    return this._track;\n  }\n\n  @Input()\n  set track(value: SpotifyApi.TrackObjectFull) {\n    this._track = value;\n    if (value) {\n      this.albumRouteUrl = RouteUtil.getAlbumRouteUrl(value.album.id);\n    }\n  }  \n  \n  constructor(private playbackStore: PlaybackStore, private playerApi: PlayerApiService) {}\n\n  ngOnInit(): void {\n    this.isTrackPlaying$ = SelectorUtil.getTrackPlayingState(\n      combineLatest([of(this.track?.id), this.playbackStore.playback$])\n    );\n  }\n\n  togglePlayTrack(isPlaying: boolean) {\n    if (!this.track?.uri) {\n      return;\n    }\n\n    this.playerApi\n      .togglePlay(isPlaying, {\n        context_uri: this.track.album.uri,\n        offset: {\n          position: (this.track.track_number - 1) || 0\n        }\n      })\n      .subscribe(); //TODO: Refactor with component store live stream\n  }\n}\n","<as-media-table-row class=\"artist-top-tracks-grid track-row\"\n                    (dblclick)=\"togglePlayTrack(false)\">\n  <ng-container *ngrxLet=\"isTrackPlaying$ as isPlaying\">\n    <as-media-order [index]=\"order\"\n                    [isPlaying]=\"isPlaying!\"\n                    (togglePlay)=\"togglePlayTrack($event)\">\n    </as-media-order>\n    <as-track-main-info [track]=\"$any(track)\"\n                        [isShowArtist]=\"false\"\n                        [isPlaying]=\"isPlaying\">\n    </as-track-main-info>\n    <a class=\"text-description link-subtle hover:underline\"\n       [routerLink]=\"albumRouteUrl\">\n      {{ track.album.name }}\n    </a>\n  </ng-container>\n  <div class=\"text-description\">\n    {{ track.duration_ms | duration }}\n  </div>\n</as-media-table-row>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ArtistTopTrackComponent } from './artist-top-track.component';\nimport { MediaTableModule } from '@angular-spotify/web/shared/ui/media-table';\nimport { MediaOrderModule } from '@angular-spotify/web/shared/ui/media-order';\nimport { TrackMainInfoModule } from '@angular-spotify/web/shared/ui/track-main-info';\nimport { DurationPipeModule } from '@angular-spotify/web/shared/pipes/duration-pipe';\nimport { LetDirective, PushPipe } from '@ngrx/component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MediaTableModule,\n    MediaOrderModule,\n    TrackMainInfoModule,\n    DurationPipeModule,\n    LetDirective, PushPipe,\n    RouterModule\n  ],\n  declarations: [ArtistTopTrackComponent],\n  exports: [ArtistTopTrackComponent]\n})\nexport class ArtistTopTrackModule {}\n","export * from './lib/artist-top-tracks.module';\n","import { Component } from '@angular/core';\nimport { ArtistTopTracksStore } from '@angular-spotify/web/artist/data-access';\n\n@Component({\n  selector: 'as-artist-top-tracks',\n  template: `\n    <h2 class=\"text-heading mt-2 mb-4\">Popular</h2>\n    @if (vm$ | async; as vm) {\n      @for (track of vm.data?.tracks; track track; let idx = $index) {\n        <as-artist-top-track\n          [order]=\"idx + 1\"\n          [track]=\"track\"\n        ></as-artist-top-track>\n      }\n    }\n    `,\n  providers: [ArtistTopTracksStore]\n})\nexport class ArtistTopTracksComponent {\n  readonly vm$ = this.store.vm$;\n  constructor(private readonly store: ArtistTopTracksStore) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DurationPipeModule } from '@angular-spotify/web/shared/pipes/duration-pipe';\nimport { ArtistTopTracksComponent } from './artist-top-tracks.component';\nimport { ArtistTopTrackModule } from '@angular-spotify/web/artist/ui/artist-top-track';\n\n@NgModule({\n  imports: [CommonModule, DurationPipeModule, ArtistTopTrackModule],\n  exports: [ArtistTopTracksComponent],\n  declarations: [ArtistTopTracksComponent]\n})\nexport class ArtistTopTracksModule {}\n"],"names":["ComponentStore","tapResponse","filter","switchMap","tap","withLatestFrom","ArtistApiService","AuthStore","ArtistStore","ArtistTopTracksStore","constructor","artistStore","authStore","artistApi","data$","select","s","data","status$","status","error$","error","vm$","debounce","loadArtistTopTracks","effect","params$","pipe","artistId","patchState","country$","country","getArtistTopTracks","artistIdParams$","_","i0","ɵɵinject","i1","i2","i3","_2","factory","ɵfac","RouterUtil","SelectorUtil","ActivatedRoute","pluck","route","params","Configuration","ArtistId","isArtistLoading$","isLoading","artist$","loadArtist","getArtist","artist","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵtemplate","ArtistComponent_Conditional_0_Conditional_2_Template","artist_r1","name","images","url","followers","total","ɵɵconditional","ɵɵpipeBind1","ctx_r1","ArtistComponent","ɵɵdirectiveInject","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","ArtistComponent_Template","rf","ctx","ArtistComponent_Conditional_0_Template","tmp_0_0","CommonModule","WorkInProgressModule","RouterModule","MediaSummaryModule","TracksLoadingComponent","ArtistTopTracksModule","ArtistModule","_3","forChild","path","component","declarations","imports","exports","RouteUtil","combineLatest","of","PlaybackStore","PlayerApiService","ɵɵelementContainerStart","ɵɵlistener","ArtistTopTrackComponent_ng_container_1_Template_as_media_order_togglePlay_1_listener","$event","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","togglePlayTrack","ɵɵtext","order","isPlaying_r3","track","albumRouteUrl","ɵɵtextInterpolate1","album","ArtistTopTrackComponent","_track","value","getAlbumRouteUrl","id","playbackStore","playerApi","ngOnInit","isTrackPlaying$","getTrackPlayingState","playback$","isPlaying","uri","togglePlay","context_uri","offset","position","track_number","subscribe","inputs","ArtistTopTrackComponent_Template","ArtistTopTrackComponent_Template_as_media_table_row_dblclick_0_listener","ArtistTopTrackComponent_ng_container_1_Template","duration_ms","MediaTableModule","MediaOrderModule","TrackMainInfoModule","DurationPipeModule","LetDirective","PushPipe","ArtistTopTrackModule","idx_r2","track_r1","ɵɵrepeaterCreate","ArtistTopTracksComponent_Conditional_2_For_1_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","vm_r3","tracks","ArtistTopTracksComponent","store","ArtistTopTracksComponent_Template","ArtistTopTracksComponent_Conditional_2_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}