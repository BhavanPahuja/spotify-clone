{"version":3,"file":"default-libs_web_shared_ui_media-summary_src_index_ts-libs_web_shared_ui_tracks-loading_src_i-d0e7a5.js","mappings":"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","sources":["./libs/web/shared/ui/media-summary/src/index.ts","./libs/web/shared/ui/media-summary/src/lib/media-summary.component.ts","./libs/web/shared/ui/media-summary/src/lib/media-summary.component.html","./libs/web/shared/ui/media-summary/src/lib/media-summary.module.ts","./libs/web/shared/ui/tracks-loading/src/index.ts","./libs/web/shared/ui/tracks-loading/src/lib/skeleton.component.ts","./libs/web/shared/ui/tracks-loading/src/lib/tracks-loading.component.ts","./libs/web/shared/ui/tracks-loading/src/lib/tracks-loading.component.html"],"sourcesContent":["export * from './lib/media-summary.module';\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'as-media-summary',\n  templateUrl: './media-summary.component.html',\n  styleUrls: ['./media-summary.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MediaSummaryComponent {\n  @Input() type: 'Album' | 'Playlist' | 'Artist' | undefined;\n  @Input() title: string | undefined;\n  @Input() description!: string | null;\n  @Input() artist: string | undefined;\n  @Input() trackCount: number | undefined;\n  @Input() likesCount: number | undefined;\n  @Input() followerCount: number | undefined;\n  @Input() imageUrl: string | undefined;\n  @Input() releaseDate: string | undefined;\n\n  likeMapping: {[k: string]: string} = {'=1': '# like', 'other': '# likes'};\n  songMapping: {[k: string]: string} = {'=1': '# song', 'other': '# songs'};\n  followerMapping: {[k: string]: string} = {'=1': '# follower', 'other': '# followers'};\n}\n","<as-media-cover [imageUrl]=\"imageUrl\"> </as-media-cover>\n\n<div class=\"flex flex-col\">\n  <h3 class=\"text-sm text-white uppercase\">{{ type }}</h3>\n  <h2 class=\"media-title ellipsis-one-line\">{{ title }}</h2>\n  <div class=\"mt-3 mb-2 text-description\" [innerHTML]=\"description\"></div>\n  <div class=\"flex\">\n    @if (artist) {\n      <div class=\"text-sm font-bold text-white\">{{ artist }}</div>\n    }\n    @if (likesCount) {\n      <div class=\"media-info\">{{ likesCount | i18nPlural : likeMapping}}</div>\n    }\n    @if (releaseDate) {\n      <div class=\"media-info\">{{ releaseDate | date:'yyyy'}}</div>\n    }\n    @if (trackCount) {\n      <div class=\"media-info\">{{ trackCount | i18nPlural : songMapping }}</div>\n    }\n    @if (followerCount) {\n      <div class=\"media-info\">{{ followerCount | i18nPlural : followerMapping }}</div>\n    }\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediaCoverModule } from '@angular-spotify/web/shared/ui/media-cover';\nimport { MediaSummaryComponent } from './media-summary.component';\n\n@NgModule({\n  imports: [CommonModule, MediaCoverModule],\n  declarations: [MediaSummaryComponent],\n  exports: [MediaSummaryComponent]\n})\nexport class MediaSummaryModule {}\n","export * from './lib/tracks-loading.component';\nexport * from './lib/skeleton.component';\n","import { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'as-skeleton',\n  template: `<ng-content></ng-content>`,\n  standalone: true\n})\nexport class SkeletonComponent {\n  @Input() pulse = true;\n  @HostBinding('class') class = `bg-highlight text-transparent rounded-sm block`;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SkeletonComponent } from './skeleton.component';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'as-tracks-loading',\n  templateUrl: './tracks-loading.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [SkeletonComponent, NgClass]\n})\nexport class TracksLoadingComponent {\n  skeletonRows: number[] = Array.from({ length: 5 });\n  @Input() avatar = false;\n  @Input() set rows(value: number) {\n    this.skeletonRows = Array.from({ length: value });\n  }\n}\n","@if (avatar) {\n  <div class=\"flex gap-8\">\n    <as-skeleton class=\"w-32 h-32 flex-shrink-0\"></as-skeleton>\n    <div class=\"flex flex-col flex-1 gap-4\">\n      <as-skeleton class=\"w-full h-8\"></as-skeleton>\n      <as-skeleton class=\"w-full h-12\"></as-skeleton>\n      <as-skeleton class=\"w-full h-8\"></as-skeleton>\n    </div>\n  </div>\n}\n\n@if (!avatar) {\n  <div class=\"flex flex-col gap-4\">\n    @for (row of skeletonRows; track row) {\n      <as-skeleton class=\"w-full h-8\"></as-skeleton>\n    }\n  </div>\n}\n"],"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","artist","ɵɵpipeBind2","likesCount","likeMapping","releaseDate","trackCount","songMapping","followerCount","followerMapping","MediaSummaryComponent","constructor","_","_2","selectors","inputs","type","title","description","imageUrl","decls","vars","consts","template","MediaSummaryComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","MediaSummaryComponent_Conditional_8_Template","MediaSummaryComponent_Conditional_9_Template","MediaSummaryComponent_Conditional_10_Template","MediaSummaryComponent_Conditional_11_Template","MediaSummaryComponent_Conditional_12_Template","ɵɵproperty","ɵɵsanitizeHtml","ɵɵconditional","CommonModule","MediaCoverModule","MediaSummaryModule","_3","declarations","imports","exports","SkeletonComponent","pulse","class","hostVars","hostBindings","SkeletonComponent_HostBindings","ɵɵclassMap","ɵɵprojection","ɵɵrepeaterCreate","TracksLoadingComponent_Conditional_1_For_2_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","skeletonRows","TracksLoadingComponent","Array","from","length","avatar","rows","value","standalone","features","ɵɵStandaloneFeature","TracksLoadingComponent_Template","TracksLoadingComponent_Conditional_0_Template","TracksLoadingComponent_Conditional_1_Template","encapsulation","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}