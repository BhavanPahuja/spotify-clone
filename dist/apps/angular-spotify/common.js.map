{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCqD;AACyB;AACb;AACsB;;;;;;;;;;;;ICFrFK,qEAAA,GAAsD;IACpDA,4DAAA,wBAEuD;IAAvCA,wDAAA,wBAAAI,iFAAAC,MAAA;MAAAL,2DAAA,CAAAO,GAAA;MAAA,MAAAC,MAAA,GAAAR,2DAAA;MAAA,OAAAA,yDAAA,CAAcQ,MAAA,CAAAG,eAAA,CAAAN,MAAA,CAAuB;IAAA,EAAC;IACtDL,0DAAA,EAAiB;IACjBA,uDAAA,4BAEqB;;;;;;IANLA,uDAAA,EAAoB;IACpBA,wDADA,UAAAQ,MAAA,CAAAQ,UAAA,CAAoB,cAAAC,YAAA,CACI;IAGpBjB,uDAAA,EAAqB;IACrBA,wDADA,UAAAQ,MAAA,CAAAU,KAAA,CAAqB,cAAAD,YAAA,CACE;;;ADIzC,MAAOE,mBAAmB;EAO9B,IAAIH,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACI,KAAK,KAAKC,SAAS,GAAG,IAAI,CAACH,KAAK,CAACI,YAAY,GAAG,IAAI,CAACF,KAAK;EACxE;EAEAG,YACUC,aAA4B,EAC5BC,SAA2B;IAD3B,KAAAD,aAAa,GAAbA,aAAa;IACb,KAAAC,SAAS,GAATA,SAAS;EAAqB;EAExCC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,GAAG7B,2EAAY,CAAC8B,oBAAoB,CACtDjC,mDAAa,CAAC,CAACC,wCAAE,CAAC,IAAI,CAACsB,KAAK,CAACW,EAAE,CAAC,EAAE,IAAI,CAACL,aAAa,CAACM,SAAS,CAAC,CAAC,CACjE;EACH;EAEAnB,eAAeA,CAACoB,SAAkB;IAChC,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;MACpB;IACF;IAEA,IAAI,CAACP,SAAS,CACXQ,UAAU,CAACF,SAAS,EAAE;MACrBG,WAAW,EAAE,IAAI,CAACF,UAAU;MAC5BG,MAAM,EAAE;QACNC,QAAQ,EAAE,IAAI,CAAClB,KAAK,CAACI,YAAY,GAAG;;KAEvC,CAAC,CACDe,SAAS,EAAE,CAAC,CAAC;EAClB;EAAC,QAAAC,CAAA;qBAlCUnB,mBAAmB,EAAAnB,+DAAA,CAAAwC,wFAAA,GAAAxC,+DAAA,CAAAyC,iGAAA;EAAA;EAAA,QAAAC,EAAA;UAAnBvB,mBAAmB;IAAAwB,SAAA;IAAAC,MAAA;MAAA1B,KAAA;MAAAc,UAAA;MAAAZ,KAAA;IAAA;IAAAyB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZhClD,4DAAA,4BACwD;QAApCA,wDAAA,sBAAAoD,oEAAA;UAAA,OAAYD,GAAA,CAAAxC,eAAA,CAAgB,KAAK,CAAC;QAAA,EAAC;QACrDX,wDAAA,IAAAsD,2CAAA,0BAAsD;QAStDtD,4DAAA,aAA8B;QAC5BA,oDAAA,GACF;;QACFA,0DADE,EAAM,EACa;;;QAZJA,uDAAA,EAAyB;QAAzBA,wDAAA,YAAAmD,GAAA,CAAAxB,eAAA,CAAyB;QAUtC3B,uDAAA,GACF;QADEA,gEAAA,MAAAA,yDAAA,OAAAmD,GAAA,CAAAjC,KAAA,CAAAwC,WAAA,OACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ6C;AACe;AACgB;AACA;AACO;AACA;AAC5B;;AAcnD,MAAOQ,gBAAgB;EAAA,QAAA5B,CAAA;qBAAhB4B,gBAAgB;EAAA;EAAA,QAAAxB,EAAA;UAAhBwB;EAAgB;EAAA,QAAAC,EAAA;cAVzBR,yDAAY,EACZC,wFAAgB,EAChBC,wFAAgB,EAChBC,+FAAmB,EACnBC,+FAAkB;EAAA;;;sHAMTG,gBAAgB;IAAAE,YAAA,GAHZjD,uEAAmB;IAAAkD,OAAA,GAPhCV,yDAAY,EACZC,wFAAgB,EAChBC,wFAAgB,EAChBC,+FAAmB,EACnBC,+FAAkB,EAClBC,yDAAY,EAAEC,qDAAQ;IAAAK,OAAA,GAGdnD,uEAAmB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBwD;AACT;AACF;AAOvB;;;;;;;;;;;;;;ICPjDnB,qEAAA,GAAsD;IACpDA,4DAAA,wBAAoG;IAAvCA,wDAAA,wBAAAwE,kGAAAnE,MAAA;MAAAL,2DAAA,CAAAO,GAAA;MAAA,MAAAC,MAAA,GAAAR,2DAAA;MAAA,OAAAA,yDAAA,CAAcQ,MAAA,CAAAG,eAAA,CAAAN,MAAA,CAAuB;IAAA,EAAC;IACnGL,0DAAA,EAAiB;IACjBA,uDAAA,4BAAsF;;;;;;IAFtEA,uDAAA,EAAmB;IAACA,wDAApB,UAAAQ,MAAA,CAAAY,KAAA,KAAmB,cAAAH,YAAA,CAAyB;IAExCjB,uDAAA,EAAoB;IAACA,wDAArB,UAAAQ,MAAA,CAAAiE,IAAA,CAAAvD,KAAA,CAAoB,cAAAD,YAAA,CAAwB;;;;;IAJpEjB,4DAAA,4BAA2D;IACzDA,wDAAA,IAAA0E,4DAAA,0BAAsD;IAKtD1E,4DAAA,WAAqF;IACnFA,oDAAA,GACF;IAAAA,0DAAA,EAAI;IACJA,4DAAA,aAAuE;;IACrEA,oDAAA,GACF;;IAAAA,0DAAA,EAAM;IACNA,4DAAA,aAA8B;IAC5BA,oDAAA,GACF;;IACFA,0DADE,EAAM,EACa;;;;IAdJA,uDAAA,EAAyB;IAAzBA,wDAAA,YAAAQ,MAAA,CAAAmB,eAAA,CAAyB;IAKgB3B,uDAAA,EAA4B;IAA5BA,wDAAA,eAAAQ,MAAA,CAAAmE,aAAA,CAA4B;IAClF3E,uDAAA,EACF;IADEA,gEAAA,MAAAQ,MAAA,CAAAiE,IAAA,CAAAvD,KAAA,CAAA0D,KAAA,kBAAApE,MAAA,CAAAiE,IAAA,CAAAvD,KAAA,CAAA0D,KAAA,CAAAC,IAAA,MACF;IAC8B7E,uDAAA,EAAwC;IAAxCA,wDAAA,UAAAA,yDAAA,OAAAQ,MAAA,CAAAiE,IAAA,CAAAM,QAAA,YAAwC;IACpE/E,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,OAAAQ,MAAA,CAAAiE,IAAA,CAAAM,QAAA,OACF;IAEE/E,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,SAAAQ,MAAA,CAAAiE,IAAA,CAAAvD,KAAA,CAAAwC,WAAA,OACF;;;ADEE,MAAOsB,sBAAsB;EACjC,IAAIP,IAAIA,CAAA;IACN,OAAO,IAAI,CAACQ,KAAK;EACnB;EAEA,IACIR,IAAIA,CAACS,KAAqC;IAC5C,IAAI,CAACD,KAAK,GAAGC,KAAK;IAClB,IAAIA,KAAK,EAAEhE,KAAK,EAAE;MAChB,IAAI,CAACyD,aAAa,GAAGJ,wEAAS,CAACY,gBAAgB,CAACD,KAAK,CAAChE,KAAK,CAAC0D,KAAK,CAAC/C,EAAE,CAAC;IACvE;EACF;EAWAN,YAAoBC,aAA4B,EAAUC,SAA2B;IAAjE,KAAAD,aAAa,GAAbA,aAAa;IAAyB,KAAAC,SAAS,GAATA,SAAS;IAL1D,KAAA2D,IAAI,GAA8B,UAAU;EAKmC;EAExF1D,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,GAAG7B,2EAAY,CAAC8B,oBAAoB,CACtDjC,mDAAa,CAAC,CAACC,wCAAE,CAAC,IAAI,CAACqF,KAAK,EAAE/D,KAAK,CAACW,EAAE,CAAC,EAAE,IAAI,CAACL,aAAa,CAACM,SAAS,CAAC,CAAC,CACxE;EACH;EAEAnB,eAAeA,CAACoB,SAAkB;IAChC,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;MACpB;IACF;IAEA,IAAI,CAACP,SAAS,CACXQ,UAAU,CAACF,SAAS,EAAE;MACrBG,WAAW,EAAE,IAAI,CAACF,UAAU;MAC5BG,MAAM,EAAE;QACNC,QAAQ,EAAE,IAAI,CAACgD,IAAI,KAAK,UAAU,GAAG,IAAI,CAAChE,KAAK,GAAG,IAAI,CAACqD,IAAI,CAACvD,KAAK,CAACI,YAAY,GAAG;;KAEpF,CAAC,CACDe,SAAS,EAAE,CAAC,CAAC;EAClB;EAEA8C,gBAAgBA,CAACP,KAAuC;IACtD,OAAOL,wEAAS,CAACY,gBAAgB,CAACP,KAAK,CAAC/C,EAAE,CAAC;EAC7C;EAAC,QAAAS,CAAA;qBA/CU0C,sBAAsB,EAAAhF,+DAAA,CAAAwC,wFAAA,GAAAxC,+DAAA,CAAAyC,iGAAA;EAAA;EAAA,QAAAC,EAAA;UAAtBsC,sBAAsB;IAAArC,SAAA;IAAAC,MAAA;MAAA6B,IAAA;MAAArD,KAAA;MAAAY,UAAA;MAAAoD,IAAA;IAAA;IAAAvC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAqC,gCAAAnC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCjBnClD,wDAAA,IAAAsF,6CAAA,kCAAY;;;QAAZtF,2DAAA,IAAAmD,GAAA,CAAAsB,IAAA,UAiBC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChB8C;AACqB;AACU;AACO;AACA;AACP;AACrB;AACV;;AAczC,MAAOgB,mBAAmB;EAAA,QAAAnD,CAAA;qBAAnBmD,mBAAmB;EAAA;EAAA,QAAA/C,EAAA;UAAnB+C;EAAmB;EAAA,QAAAtB,EAAA;cAX5BR,yDAAY,EACZ6B,yDAAY,EACZ5B,wFAAgB,EAChBG,+FAAkB,EAClBD,+FAAmB,EACnBD,wFAAgB;EAAA;;;sHAMP4B,mBAAmB;IAAArB,YAAA,GAHfY,6EAAsB;IAAAX,OAAA,GARnCV,yDAAY,EACZ6B,yDAAY,EACZ5B,wFAAgB,EAChBG,+FAAkB,EAClBD,+FAAmB,EACnBD,wFAAgB,EAChBG,yDAAY,EAAEC,qDAAQ;IAAAK,OAAA,GAGdU,6EAAsB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpBkF;AAE7B;AACxB;AACmB;;;;;;;;;ICA5EhF,4DAAA,iBAOkD;IAAhDA,wDAAA,wBAAA8F,iFAAAzF,MAAA;MAAA,MAAA0F,WAAA,GAAA/F,2DAAA,CAAAO,GAAA,EAAAyF,SAAA;MAAA,MAAAC,MAAA,GAAAjG,2DAAA;MAAA,OAAAA,yDAAA,CAAciG,MAAA,CAAAhE,UAAA,CAAA5B,MAAA,EAAA0F,WAAA,CAAAG,GAAA,CAAgC;IAAA,EAAC;IACjDlG,0DAAA,EAAU;;;;;IAFRA,wDALA,YAAAiG,MAAA,CAAAE,kBAAA,CAAAJ,WAAA,EAAwC,UAAAA,WAAA,CAAAlB,IAAA,CACjB,QAAAkB,WAAA,CAAAG,GAAA,CACH,gBAAAH,WAAA,CAAAK,WAAA,CACgB,aAAAL,WAAA,CAAAM,MAAA,qBAAAN,WAAA,CAAAM,MAAA,IAAAC,GAAA,CACA,cAAAP,WAAA,CAAAQ,QAAA,CACL;;;;;IATrCvG,4DAAA,aACG;IACDA,8DAAA,IAAAyG,kDAAA,sBAAAzG,uEAAA,CAUC;IACHA,0DAAA,EAAM;;;;IAXJA,uDAAA,EAUC;IAVDA,wDAAA,CAAAiG,MAAA,CAAAW,SAAA,CAAAC,KAAA,CAUC;;;;;IAIH7G,uDAAA,iBACa;;;ADNT,MAAO8G,qBAAqB;EAKhCvF,YAAoBE,SAA2B;IAA3B,KAAAA,SAAS,GAATA,SAAS;IAF7B,KAAAsF,iBAAiB,GAAGlB,qDAAM,CAACH,iGAA4B,CAAC;EAEN;EAElDzD,UAAUA,CAACF,SAAkB,EAAEC,UAAkB;IAC/C,IAAI,CAACP,SAAS,CACXQ,UAAU,CAACF,SAAS,EAAE;MACrBG,WAAW,EAAEF;KACd,CAAC,CACDK,SAAS,EAAE;EAChB;EAEA;;;;EAIE8D,kBAAkBA,CAAC1B,IAAyC;IAC1D,MAAMuC,UAAU,GAAG,IAAI,CAACD,iBAAiB,CAACE,iBAAiB,EAAE;IAC7D,MAAMC,iBAAiB,GAAGvB,oGAA2B,CACnDqB,UAAU,EACVpB,yEAAU,CAACuB,aAAa,CAACC,UAAU,CACpC;IACD,MAAMC,kBAAkB,GAAGH,iBAAiB,KAAKzC,IAAI,CAAC5C,EAAE;IACxD,OAAOwF,kBAAkB,GAAG,sBAAsB,GAAG,EAAE;EACzD;EAAC,QAAA/E,CAAA;qBA3BQwE,qBAAqB,EAAA9G,+DAAA,CAAAwC,iGAAA;EAAA;EAAA,QAAAE,EAAA;UAArBoE,qBAAqB;IAAAnE,SAAA;IAAAC,MAAA;MAAAgE,SAAA;MAAAU,SAAA;IAAA;IAAAzE,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAuE,+BAAArE,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCIlClD,wDAhBA,IAAAwH,4CAAA,iBAAiB,IAAAC,4CAAA,qBAgBA;;;QAhBjBzH,2DAAA,IAAAmD,GAAA,CAAAyD,SAAA,UAeC;QACD5G,uDAAA,EAGC;QAHDA,2DAAA,IAAAmD,GAAA,CAAAmE,SAAA,UAGC;;;;;;;;;;;;;;;;;;;;;;;;;;AClB8C;AACmB;AACG;AACE;;AAOjE,MAAOM,kBAAkB;EAAA,QAAAtF,CAAA;qBAAlBsF,kBAAkB;EAAA;EAAA,QAAAlF,EAAA;UAAlBkF;EAAkB;EAAA,QAAAzD,EAAA;cAJnBR,yDAAY,EAAE+D,+EAAa,EAAEC,iFAAa;EAAA;;;sHAIzCC,kBAAkB;IAAAxD,YAAA,GAHd0C,2EAAqB;IAAAzC,OAAA,GAD1BV,yDAAY,EAAE+D,+EAAa,EAAEC,iFAAa;IAAArD,OAAA,GAE1CwC,2EAAqB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AED3B,MAAOe,uBAAuB;EANpCtG,YAAA;IAOW,KAAAuG,WAAW,GAAG,EAAE;;EAC1B,QAAAxF,CAAA;qBAFYuF,uBAAuB;EAAA;EAAA,QAAAnF,EAAA;UAAvBmF,uBAAuB;IAAAlF,SAAA;IAAAC,MAAA;MAAAkF,WAAA;IAAA;IAAAjF,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA+E,iCAAA7E,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRpClD,4DAAA,YAAgC;QAAAA,oDAAA,oCAAmB;QAAAA,0DAAA,EAAK;QACxDA,4DAAA,YAA4C;QAC1CA,oDAAA,aAAK;QAAAA,4DAAA,WAAwC;QAAAA,oDAAA,GAA8B;QAAAA,0DAAA,EAAO;QAACA,oDAAA,yCACrF;QAAAA,0DAAA,EAAK;;;QADQA,uDAAA,GAAiC;QAAjCA,yDAAA,gBAAAmD,GAAA,CAAA2E,WAAA,CAAiC;QAAC9H,uDAAA,EAA8B;QAA9BA,+DAAA,CAAAmD,GAAA,CAAA2E,WAAA,cAA8B;;;;;;;;;;;;;;;;;;;;;;;ACD9B;AACwB;;AAOjE,MAAOI,oBAAoB;EAAA,QAAA5F,CAAA;qBAApB4F,oBAAoB;EAAA;EAAA,QAAAxF,EAAA;UAApBwF;EAAoB;EAAA,QAAA/D,EAAA;cAJrBR,yDAAY;EAAA;;;sHAIXuE,oBAAoB;IAAA9D,YAAA,GAHhByD,gFAAuB;IAAAxD,OAAA,GAD5BV,yDAAY;IAAAW,OAAA,GAEZuD,gFAAuB;EAAA;AAAA","sources":["./libs/web/album/ui/album-track/src/index.ts","./libs/web/album/ui/album-track/src/lib/album-track.component.ts","./libs/web/album/ui/album-track/src/lib/album-track.component.html","./libs/web/album/ui/album-track/src/lib/album-track.module.ts","./libs/web/playlist/ui/playlist-track/src/index.ts","./libs/web/playlist/ui/playlist-track/src/lib/playlist-track.component.ts","./libs/web/playlist/ui/playlist-track/src/lib/playlist-track.component.html","./libs/web/playlist/ui/playlist-track/src/lib/playlist-track.module.ts","./libs/web/shared/ui/playlist-list/src/index.ts","./libs/web/shared/ui/playlist-list/src/lib/playlist-list.component.ts","./libs/web/shared/ui/playlist-list/src/lib/playlist-list.component.html","./libs/web/shared/ui/playlist-list/src/lib/playlist-list.module.ts","./libs/web/shared/ui/work-in-progress/src/index.ts","./libs/web/shared/ui/work-in-progress/src/lib/work-in-progress.component.ts","./libs/web/shared/ui/work-in-progress/src/lib/work-in-progress.component.html","./libs/web/shared/ui/work-in-progress/src/lib/work-in-progress.module.ts"],"sourcesContent":["export * from './lib/album-track.module';\n","import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { PlaybackStore } from '@angular-spotify/web/shared/data-access/store';\nimport { SelectorUtil } from '@angular-spotify/web/shared/utils';\nimport { PlayerApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\n\n@Component({\n  selector: 'as-album-track',\n  templateUrl: './album-track.component.html',\n  styleUrls: ['./album-track.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlbumTrackComponent implements OnInit {\n  @Input() track!: SpotifyApi.TrackObjectSimplified;\n  @Input() contextUri!: string;\n  @Input() index?: number;\n\n  isTrackPlaying$!: Observable<boolean>;\n\n  get trackIndex(): number {\n    return this.index === undefined ? this.track.track_number : this.index;\n  }\n\n  constructor(\n    private playbackStore: PlaybackStore, \n    private playerApi: PlayerApiService) {}\n\n  ngOnInit(): void {\n    this.isTrackPlaying$ = SelectorUtil.getTrackPlayingState(\n      combineLatest([of(this.track.id), this.playbackStore.playback$])\n    );\n  }\n\n  togglePlayTrack(isPlaying: boolean) {\n    if (!this.contextUri) {\n      return;\n    }\n\n    this.playerApi\n      .togglePlay(isPlaying, {\n        context_uri: this.contextUri,\n        offset: {\n          position: this.track.track_number - 1\n        }\n      })\n      .subscribe(); //TODO: Refactor with component store live stream\n  }\n}\n","<as-media-table-row class=\"album-tracks-grid track-row\"\n                    (dblclick)=\"togglePlayTrack(false)\">\n  <ng-container *ngrxLet=\"isTrackPlaying$ as isPlaying\">\n    <as-media-order [index]=\"trackIndex\"\n                    [isPlaying]=\"isPlaying!\"\n                    (togglePlay)=\"togglePlayTrack($event)\">\n    </as-media-order>\n    <as-track-main-info [track]=\"$any(track)\"\n                        [isPlaying]=\"isPlaying\">\n    </as-track-main-info>\n  </ng-container>\n  <div class=\"text-description\">\n    {{ track.duration_ms | duration }}\n  </div>\n</as-media-table-row>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlbumTrackComponent } from './album-track.component';\nimport { MediaTableModule } from '@angular-spotify/web/shared/ui/media-table';\nimport { MediaOrderModule } from '@angular-spotify/web/shared/ui/media-order';\nimport { TrackMainInfoModule } from '@angular-spotify/web/shared/ui/track-main-info';\nimport { DurationPipeModule } from '@angular-spotify/web/shared/pipes/duration-pipe';\nimport { LetDirective, PushPipe } from '@ngrx/component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MediaTableModule,\n    MediaOrderModule,\n    TrackMainInfoModule,\n    DurationPipeModule,\n    LetDirective, PushPipe,\n  ],\n  declarations: [AlbumTrackComponent],\n  exports: [AlbumTrackComponent]\n})\nexport class AlbumTrackModule {}\n","export * from './lib/playlist-track.module';\n","import { PlayerApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { PlaybackStore } from '@angular-spotify/web/shared/data-access/store';\nimport { RouteUtil, SelectorUtil } from '@angular-spotify/web/shared/utils';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'as-playlist-track',\n  templateUrl: './playlist-track.component.html',\n  styleUrls: ['./playlist-track.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlaylistTrackComponent implements OnInit {\n  get item(): SpotifyApi.PlaylistTrackObject {\n    return this._item;\n  }\n\n  @Input()\n  set item(value: SpotifyApi.PlaylistTrackObject) {\n    this._item = value;\n    if (value?.track) {\n      this.albumRouteUrl = RouteUtil.getAlbumRouteUrl(value.track.album.id);\n    }\n  }\n  \n  private _item!: SpotifyApi.PlaylistTrackObject;\n\n  @Input() index!: number;\n  @Input() contextUri!: string | null | undefined;\n  @Input() type: 'PLAYLIST' | 'LIKE_SONGS' = 'PLAYLIST';\n\n  isTrackPlaying$!: Observable<boolean>;\n  albumRouteUrl?: string;\n\n  constructor(private playbackStore: PlaybackStore, private playerApi: PlayerApiService) {}\n\n  ngOnInit(): void {\n    this.isTrackPlaying$ = SelectorUtil.getTrackPlayingState(\n      combineLatest([of(this._item?.track.id), this.playbackStore.playback$])\n    );\n  }\n\n  togglePlayTrack(isPlaying: boolean) {\n    if (!this.contextUri) {\n      return;\n    }\n\n    this.playerApi\n      .togglePlay(isPlaying, {\n        context_uri: this.contextUri,\n        offset: {\n          position: this.type === 'PLAYLIST' ? this.index : this.item.track.track_number - 1\n        }\n      })\n      .subscribe(); //TODO: Refactor with component store live stream\n  }\n\n  getAlbumRouteUrl(album: SpotifyApi.AlbumObjectSimplified) {\n    return RouteUtil.getAlbumRouteUrl(album.id);\n  }\n}\n","@if (item) {\n  <as-media-table-row class=\"playlist-tracks-grid track-row\">\n    <ng-container *ngrxLet=\"isTrackPlaying$ as isPlaying\">\n      <as-media-order [index]=\"index + 1\" [isPlaying]=\"isPlaying!\" (togglePlay)=\"togglePlayTrack($event)\">\n      </as-media-order>\n      <as-track-main-info [track]=\"item.track\" [isPlaying]=\"isPlaying\"></as-track-main-info>\n    </ng-container>\n    <a class=\"text-description link-subtle hover:underline\" [routerLink]=\"albumRouteUrl\">\n      {{ item.track.album?.name }}\n    </a>\n    <div class=\"text-description\" [title]=\"item.added_at | date: 'medium'\">\n      {{ item.added_at | date }}\n    </div>\n    <div class=\"text-description\">\n      {{ item.track.duration_ms | duration }}\n    </div>\n  </as-media-table-row>\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlaylistTrackComponent } from './playlist-track.component';\nimport { MediaTableModule } from '@angular-spotify/web/shared/ui/media-table';\nimport { DurationPipeModule } from '@angular-spotify/web/shared/pipes/duration-pipe';\nimport { TrackMainInfoModule } from '@angular-spotify/web/shared/ui/track-main-info';\nimport { MediaOrderModule } from '@angular-spotify/web/shared/ui/media-order';\nimport { LetDirective, PushPipe } from '@ngrx/component';\nimport { RouterModule } from '@angular/router';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaTableModule,\n    DurationPipeModule,\n    TrackMainInfoModule,\n    MediaOrderModule,\n    LetDirective, PushPipe\n  ],\n  declarations: [PlaylistTrackComponent],\n  exports: [PlaylistTrackComponent]\n})\nexport class PlaylistTrackModule {}\n","export * from './lib/playlist-list.module';\n","import { CurrentViewTransitionService, getViewTransitionParamValue } from '@angular-spotify/shared/view-transition';\nimport { PlaylistsResponseWithRoute } from '@angular-spotify/web/shared/data-access/models';\nimport { PlayerApiService } from '@angular-spotify/web/shared/data-access/spotify-api';\nimport { RouterUtil } from '@angular-spotify/web/shared/utils';\nimport { ChangeDetectionStrategy, Component, Input, inject } from '@angular/core';\n\n@Component({\n  selector: 'as-playlist-list',\n  templateUrl: './playlist-list.component.html',\n  styleUrls: ['./playlist-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaylistListComponent {\n  @Input() playlists!: PlaylistsResponseWithRoute | null;\n  @Input() isLoading!: boolean | null;\n  transitionService = inject(CurrentViewTransitionService);\n\n  constructor(private playerApi: PlayerApiService) {}\n\n  togglePlay(isPlaying: boolean, contextUri: string) {\n    this.playerApi\n      .togglePlay(isPlaying, {\n        context_uri: contextUri\n      })\n      .subscribe();\n  }\n\n  /*\n    When transitioning to or from the detail page, include the `with-view-transition` transition name.\n    This enables the browser to animate between the cover photo image in the list and its image on the detail page.\n  */\n    viewTransitionName(item: SpotifyApi.PlaylistObjectSimplified) {\n      const transition = this.transitionService.currentTransition();\n      const transitionAlbumId = getViewTransitionParamValue(\n        transition,\n        RouterUtil.Configuration.PlaylistId\n      );\n      const withViewTransition = transitionAlbumId === item.id;\n      return withViewTransition ? 'with-view-transition' : '';\n    }\n}\n","@if (playlists) {\n  <div class=\"common-grid\"\n    >\n    @for (playlist of playlists.items; track playlist) {\n      <as-card\n        [ngClass]=\"viewTransitionName(playlist)\"\n        [title]=\"playlist.name\"\n        [uri]=\"playlist.uri\"\n        [description]=\"playlist.description\"\n        [imageUrl]=\"playlist.images[0]?.url\"\n        [routerUrl]=\"playlist.routeUrl\"\n        (togglePlay)=\"togglePlay($event, playlist.uri)\">\n      </as-card>\n    }\n  </div>\n}\n@if (isLoading) {\n  <as-spinner>\n  </as-spinner>\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlaylistListComponent } from './playlist-list.component';\nimport { CardComponent } from '@angular-spotify/web/shared/ui/media';\nimport { SpinnerModule } from '@angular-spotify/web/shared/ui/spinner';\n\n@NgModule({\n  imports: [CommonModule, CardComponent, SpinnerModule],\n  declarations: [PlaylistListComponent],\n  exports: [PlaylistListComponent]\n})\nexport class PlaylistListModule {}\n","export * from './lib/work-in-progress.module';\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'as-work-in-progress',\n  templateUrl: './work-in-progress.component.html',\n  styleUrls: ['./work-in-progress.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkInProgressComponent {\n  @Input() featureName = '';\n}\n","<h2 class=\"text-3xl text-white\">🚧 Work in Progress</h2>\n<h3 class=\"mt-3 text-white text-opacity-90\">\n  This <span [class.font-bold]=\"!!featureName\">{{ featureName || 'feature' }}</span> is currently under development.\n</h3>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WorkInProgressComponent } from './work-in-progress.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [WorkInProgressComponent],\n  exports: [WorkInProgressComponent]\n})\nexport class WorkInProgressModule {}\n"],"names":["combineLatest","of","PlaybackStore","SelectorUtil","PlayerApiService","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","AlbumTrackComponent_ng_container_1_Template_as_media_order_togglePlay_1_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","togglePlayTrack","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","trackIndex","isPlaying_r3","track","AlbumTrackComponent","index","undefined","track_number","constructor","playbackStore","playerApi","ngOnInit","isTrackPlaying$","getTrackPlayingState","id","playback$","isPlaying","contextUri","togglePlay","context_uri","offset","position","subscribe","_","ɵɵdirectiveInject","i1","i2","_2","selectors","inputs","decls","vars","consts","template","AlbumTrackComponent_Template","rf","ctx","AlbumTrackComponent_Template_as_media_table_row_dblclick_0_listener","ɵɵtemplate","AlbumTrackComponent_ng_container_1_Template","ɵɵtext","ɵɵtextInterpolate1","ɵɵpipeBind1","duration_ms","CommonModule","MediaTableModule","MediaOrderModule","TrackMainInfoModule","DurationPipeModule","LetDirective","PushPipe","AlbumTrackModule","_3","declarations","imports","exports","RouteUtil","PlaylistTrackComponent_Conditional_0_ng_container_1_Template_as_media_order_togglePlay_1_listener","item","PlaylistTrackComponent_Conditional_0_ng_container_1_Template","albumRouteUrl","album","name","ɵɵpipeBind2","added_at","PlaylistTrackComponent","_item","value","getAlbumRouteUrl","type","PlaylistTrackComponent_Template","PlaylistTrackComponent_Conditional_0_Template","ɵɵconditional","RouterModule","PlaylistTrackModule","CurrentViewTransitionService","getViewTransitionParamValue","RouterUtil","inject","PlaylistListComponent_Conditional_0_For_2_Template_as_card_togglePlay_0_listener","playlist_r2","$implicit","ctx_r2","uri","viewTransitionName","description","images","url","routeUrl","ɵɵrepeaterCreate","PlaylistListComponent_Conditional_0_For_2_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","playlists","items","PlaylistListComponent","transitionService","transition","currentTransition","transitionAlbumId","Configuration","PlaylistId","withViewTransition","isLoading","PlaylistListComponent_Template","PlaylistListComponent_Conditional_0_Template","PlaylistListComponent_Conditional_1_Template","CardComponent","SpinnerModule","PlaylistListModule","WorkInProgressComponent","featureName","WorkInProgressComponent_Template","ɵɵclassProp","ɵɵtextInterpolate","WorkInProgressModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}