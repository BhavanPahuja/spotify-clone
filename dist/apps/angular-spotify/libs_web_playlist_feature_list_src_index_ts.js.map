{"version":3,"file":"libs_web_playlist_feature_list_src_index_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGmD;AAEP;;;;;AAQtC,MAAOI,kBAAkB;EAI7BC,YAAoBC,KAAY;IAAZ,KAAAA,KAAK,GAALA,KAAK;IAHzB,KAAAC,UAAU,GAAG,IAAI,CAACD,KAAK,CAACE,IAAI,CAACN,mDAAM,CAACD,+FAAwB,CAAC,CAAC;IAC9D,KAAAQ,mBAAmB,GAAG,IAAI,CAACH,KAAK,CAACE,IAAI,CAACN,mDAAM,CAACF,0FAAmB,CAAC,CAAC;EAE/B;EAAC,QAAAU,CAAA;qBAJzBN,kBAAkB,EAAAO,+DAAA,CAAAE,8CAAA;EAAA;EAAA,QAAAC,EAAA;UAAlBV,kBAAkB;IAAAW,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCb/BV,4DAAA,aAA6B;QAC3BA,uDAAA,0BAEmB;;;QACrBA,0DAAA,EAAM;;;QAHcA,uDAAA,EAAyC;QACzCA,wDADA,cAAAA,yDAAA,OAAAW,GAAA,CAAAb,mBAAA,EAAyC,cAAAE,yDAAA,OAAAW,GAAA,CAAAf,UAAA,EACH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDX;AACO;AACK;AACuB;;;AAC3E,MAAMyB,eAAe,GAAY,EAAE;AAgBpC,MAAOC,eAAe;EAAA,QAAAvB,CAAA;qBAAfuB,eAAe;EAAA;EAAA,QAAAnB,EAAA;UAAfmB;EAAe;EAAA,QAAAC,EAAA;cAZxBL,yDAAY,EACZC,yDAAY,CAACK,QAAQ,CAAC,CACpB;MACEC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAEjC,oEAAkBA;KAC9B,CACF,CAAC,EACF2B,4FAAkB;EAAA;;;sHAKTE,eAAe;IAAAK,YAAA,GAHXlC,oEAAkB;IAAAmC,OAAA,GAT/BV,yDAAY,EAAAhB,yDAAA,EAOZkB,4FAAkB;IAAAS,OAAA,GAGVpC,oEAAkB;EAAA;AAAA","sources":["./libs/web/playlist/feature/list/src/index.ts","./libs/web/playlist/feature/list/src/lib/playlists.component.ts","./libs/web/playlist/feature/list/src/lib/playlists.component.html","./libs/web/playlist/feature/list/src/lib/playlists.module.ts"],"sourcesContent":["export * from './lib/playlists.module';\n","import {\n  getPlaylistsLoading,\n  getPlaylistsWithRouteUrl\n} from '@angular-spotify/web/playlist/data-access';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\n@Component({\n  selector: 'as-playlists',\n  templateUrl: './playlists.component.html',\n  styleUrls: ['./playlists.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaylistsComponent {\n  playlists$ = this.store.pipe(select(getPlaylistsWithRouteUrl));\n  isPlaylistsLoading$ = this.store.pipe(select(getPlaylistsLoading));\n\n  constructor(private store: Store) {}\n}\n","<div class=\"content-spacing\">\n  <as-playlist-list [isLoading]=\"isPlaylistsLoading$ | async\"\n                    [playlists]=\"$any(playlists$ | async)\">\n  </as-playlist-list>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { PlaylistsComponent } from './playlists.component';\nimport { PlaylistListModule } from '@angular-spotify/web/shared/ui/playlist-list';\nexport const playlistsRoutes: Route[] = [];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: PlaylistsComponent\n      }\n    ]),\n    PlaylistListModule\n  ],\n  declarations: [PlaylistsComponent],\n  exports: [PlaylistsComponent]\n})\nexport class PlaylistsModule {}\n"],"names":["getPlaylistsLoading","getPlaylistsWithRouteUrl","select","Store","PlaylistsComponent","constructor","store","playlists$","pipe","isPlaylistsLoading$","_","i0","ɵɵdirectiveInject","i1","_2","selectors","decls","vars","consts","template","PlaylistsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","CommonModule","RouterModule","PlaylistListModule","playlistsRoutes","PlaylistsModule","_3","forChild","path","component","declarations","imports","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}