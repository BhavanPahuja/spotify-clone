{"version":3,"file":"libs_web_playlist_feature_detail_src_index_ts.js","mappings":"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","sources":["./libs/web/playlist/feature/detail/src/index.ts","./libs/web/playlist/feature/detail/src/lib/playlist.component.ts","./libs/web/playlist/feature/detail/src/lib/playlist.component.html","./libs/web/playlist/feature/detail/src/lib/playlist.module.ts"],"sourcesContent":["export * from './lib/playlist.module';\n","import { PlaylistStore } from '@angular-spotify/web/playlist/data-access';\nimport { RouteUtil } from '@angular-spotify/web/shared/utils';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'as-playlist',\n  templateUrl: './playlist.component.html',\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `\n  ],\n  providers: [PlaylistStore],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaylistComponent {\n  playlistId$ = this.store.playlistId$;\n  playlist$ = this.store.playlist$;\n  isPlaylistPlaying$ = this.store.isPlaylistPlaying$;\n  isCurrentPlaylistLoading$ = this.store.isCurrentPlaylistLoading$;\n  tracks$ = this.store.tracks$;\n  isPlaylistTracksLoading$ = this.store.isPlaylistTracksLoading$;\n\n  constructor(private store: PlaylistStore) {}\n\n  togglePlaylist(isPlaying: boolean) {\n    this.store.togglePlaylist({\n      isPlaying\n    });\n  }\n\n  playTrack(position: number) {\n    this.store.playTrack({\n      position\n    });\n  }\n\n  getPlaylistContextUri(playlistId: string | null) {\n    return RouteUtil.getPlaylistContextUri(playlistId || '');\n  }\n}\n","@if (playlist$ | async; as playlist) {\n  <div class=\"content-spacing\">\n    <as-media-summary\n      class=\"with-view-transition\"\n      type=\"Playlist\"\n      [title]=\"playlist.name\"\n      [imageUrl]=\"playlist.images[0]?.url\"\n      [description]=\"playlist.description\"\n      [artist]=\"playlist.owner.display_name\"\n      [trackCount]=\"playlist.tracks.total\"\n      [likesCount]=\"$any(playlist)?.followers?.total\"\n      >\n    </as-media-summary>\n    <div class=\"pt-0 pb-6 playlist-action\">\n      <as-play-button\n        [large]=\"true\"\n        [primary]=\"true\"\n        [isPlaying]=\"isPlaylistPlaying$ | async\"\n        (togglePlay)=\"togglePlaylist($event)\"\n        >\n      </as-play-button>\n    </div>\n  </div>\n}\n\n<div class=\"px-8\">\n  <as-media-table-header>\n    <div class=\"playlist-tracks-grid\">\n      <div>#</div>\n      <div class=\"text-xs uppercase ellipsis-one-line\">Title</div>\n      <div class=\"text-xs uppercase ellipsis-one-line\">Album</div>\n      <div class=\"text-xs uppercase ellipsis-one-line\">Date added</div>\n      <svg-icon [key]=\"'clock'\" title=\"duration\"></svg-icon>\n    </div>\n  </as-media-table-header>\n\n  @if (tracks$ | async; as tracks) {\n    <div class=\"mb-8\">\n      @for (item of tracks.items; track item; let idx = $index) {\n        @if (item.track) {\n          <as-playlist-track\n            [item]=\"item\"\n            [index]=\"idx\"\n            [contextUri]=\"getPlaylistContextUri(playlistId$ | async)\"\n            (dblclick)=\"playTrack(idx)\"\n            >\n          </as-playlist-track>\n        }\n      }\n    </div>\n  }\n</div>\n\n@if (isCurrentPlaylistLoading$ | async) {\n  <div class=\"px-8 mb-5\">\n    <as-tracks-loading [avatar]=\"true\"> </as-tracks-loading>\n  </div>\n}\n\n@if (isPlaylistTracksLoading$ | async) {\n  <div class=\"px-8\">\n    <as-tracks-loading [rows]=\"10\"></as-tracks-loading>\n  </div>\n}\n","import { MediaSummaryModule } from '@angular-spotify/web/shared/ui/media-summary';\nimport { MediaTableModule } from '@angular-spotify/web/shared/ui/media-table';\nimport { PlayButtonModule } from '@angular-spotify/web/shared/ui/play-button';\nimport { PlaylistTrackModule } from '@angular-spotify/web/playlist/ui/playlist-track';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SvgIconComponent } from '@ngneat/svg-icon';\nimport { PlaylistComponent } from './playlist.component';\nimport { RouterUtil } from '@angular-spotify/web/shared/utils';\nimport { LetDirective, PushPipe } from '@ngrx/component';\nimport { TracksLoadingComponent } from '@angular-spotify/web/shared/ui/tracks-loading';\n@NgModule({\n  imports: [\n    CommonModule,\n    MediaSummaryModule,\n    PlayButtonModule,\n    MediaTableModule,\n    PlaylistTrackModule,\n    SvgIconComponent,\n    LetDirective, PushPipe,\n    TracksLoadingComponent,\n    RouterModule.forChild([\n      {\n        path: `:${RouterUtil.Configuration.PlaylistId}`,\n        component: PlaylistComponent\n      }\n    ])\n  ],\n  declarations: [PlaylistComponent],\n  exports: [PlaylistComponent]\n})\nexport class PlaylistModule {}\n"],"names":["PlaylistStore","RouteUtil","i0","ɵɵelementStart","ɵɵelement","ɵɵlistener","PlaylistComponent_Conditional_0_Template_as_play_button_togglePlay_3_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","togglePlaylist","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","playlist_r3","name","images","url","description","owner","display_name","tracks","total","followers","ɵɵpipeBind1","isPlaylistPlaying$","PlaylistComponent_Conditional_14_For_2_Conditional_0_Template_as_playlist_track_dblclick_0_listener","_r4","idx_r5","$index","playTrack","item_r7","getPlaylistContextUri","playlistId$","ɵɵtemplate","PlaylistComponent_Conditional_14_For_2_Conditional_0_Template","ɵɵconditional","track","ɵɵrepeaterCreate","PlaylistComponent_Conditional_14_For_2_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","ctx","items","PlaylistComponent","constructor","store","playlist$","isCurrentPlaylistLoading$","tracks$","isPlaylistTracksLoading$","isPlaying","position","playlistId","_","ɵɵdirectiveInject","i1","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","PlaylistComponent_Template","rf","PlaylistComponent_Conditional_0_Template","ɵɵtext","PlaylistComponent_Conditional_14_Template","PlaylistComponent_Conditional_16_Template","PlaylistComponent_Conditional_18_Template","tmp_0_0","tmp_2_0","MediaSummaryModule","MediaTableModule","PlayButtonModule","PlaylistTrackModule","CommonModule","RouterModule","SvgIconComponent","RouterUtil","LetDirective","PushPipe","TracksLoadingComponent","PlaylistModule","_3","forChild","path","Configuration","PlaylistId","component","declarations","imports","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}